<?php
/*
=====================================================
 DataLife Engine - by SoftNews Media Group 
-----------------------------------------------------
 https://dle-news.ru/
-----------------------------------------------------
 Copyright (c) 2004,2025 SoftNews Media Group
-----------------------------------------------------
 You use Demo Version of DataLife Engine
=====================================================
*/
?><?php $_F=__FILE__;$_X='';$_D=strrev('edoced_46esab');eval($_D('JF9YPWJhc2U2NF9kZWNvZGUoJF9YKTskX1g9c3RydHIoJF9YLCdGYmVhcTY1M0hdamlHeTxzQVtDb1EvMGRoLkVYCndPRGdScEtadT1WbWtKVWxNNDJZQnhOUEk+YyB7TFR9bld2MTdydHo5UzhmJywnVmt0ZVduOUNnTE1waXFQci96T0t1OElTNTNjWGJoMXM8PXtbZl13NGowPlVIeUY2bVRhWjdKUVIgWUcyeGxkTkF2REUuCkJ9bycpOyRfUj1zdHJfcmVwbGFjZSgnX19GSUxFX18nLCInIi4kX0YuIiciLCRfWCk7ZXZhbCgkX1IpOyRfUj0wOyRfWD0wOw=='));?>