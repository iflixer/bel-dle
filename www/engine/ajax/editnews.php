<?php
/*
=====================================================
 DataLife Engine - by SoftNews Media Group 
-----------------------------------------------------
 https://dle-news.ru/
-----------------------------------------------------
 Copyright (c) 2004,2025 SoftNews Media Group
-----------------------------------------------------
 You use Demo Version of DataLife Engine
=====================================================
*/
?><?php $_F=__FILE__;$_X='?=V?{U{vT*vQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQvwHdedn<Plwhzp<zlw-wg9wu8PetlY6wklS<dwbN8
{wv-----------------------------------------------------vwUee{6:TTSMl-zlY6XN
Tv-----------------------------------------------------vwm8{9N<pUew(])w.ffW-.f.ywu8PetlY6wklS<dwbN8
{vQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQvwGU<6w]8Slw<6w{N8el]elSwg9w]8{9N<pUevQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQvwC<Ml:wlS<ezlY6X{U{v-----------------------------------------------------vw[6l:wRcR/wzlY6wlS<evQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQv*Tvv<P(!SlP<zlS('HRGRn2Chhtb2th'))wsv	UldSlN(w"BGGqT0X0wWfOwC8Ng<SSlz"w);v	UldSlNw(w'n8]de<8z:wXXTXXT'w);v	S<l(w"Bd]><zpwdeelD{e!"w);vavv${dN6lwQwzlYwqdN6lC<MelN();vv<P(w!$<6_M8pplSw)wS<l(w"lNN8N"w);vv$<SwQww<66le($_}hK[huGI'<S'7)w?w<ze3dM(w$_}hK[huGI'<S'7w)w:wf;v$_}hK[huGI'd]e<8z'7wQw<66le($_}hK[huGI'd]e<8z'7)w?w$_}hK[huGI'd]e<8z'7w:w'';vv<P(w!$<Sw)wS<l(w"lNN8N"w);vv<P(w$_}hK[huGI'd]e<8z'7wQQw"lS<e"w)wsvv	$SdN>_eUlDlwQw"";vv	<Pw(SlP<zlS('GhkqnRGh_H2}'))wsv		$elD{Mdel_S<NwQwGhkqnRGh_H2};v	awlM6lw$elD{Mdel_S<NwQw}ZZG_H2}wXw"TelD{Mdel6T"wXw$]8zP<pI'6><z'7;vv	<Pw(<6_P<Ml($elD{Mdel_S<NwXw"T<zP8XL68z"))wsvv		$SdedwQwL68z_Sl]8Sl(eN<D(P<Ml_ple_]8zelze6($elD{Mdel_S<NwXw"T<zP8XL68z")),weN
l);vv		<Pw(<66le($SdedI'e9{l'7)wdzSw$SdedI'e9{l'7wQQw"SdN>")wsv			$SdN>_eUlDlwQw"wSMl_eUlDl_SdN>";v		av	avv	$N8YwQw$Sg-=6
{lN_j
lN9(w"uhnhmGw{X<S,w{Xd
e8N,w{XSdel,w{X6U8Ne_6e8N9,w{XP
MM_6e8N9,w{XxP<lMS6,w{Xe<eMl,w{X]delp8N9,w{Xd{{N83l,w{XdMM8Y_gN,wlXNld68zwC}Zkw"wXwq}hC2/wXw"_{86ew{wnhCGwcZ2tw"wXwq}hC2/wXw"_{86e_lxeNd6wlwZtw({X<SQlXzlY6_<S)w1Bh}hw{X<SwQw'$<S'"w);v	v	<P(w$<Sw!Qw$N8YI'<S'7w)wS<l(w"lNN8N"w);v	v	$]de_M<6ewQwlx{M8Sl(w',',w$N8YI']delp8N9'7w);v	$]delp8N<l6_M<6ewQwmdelp8N9tlY6ulMl]e<8z($]de_M<6e,wf);vv	$xP<lMS6d]e<8zwQw"]delp8N9P<MelN";v	<z]M
Sl_8z]l(HnhqM
p<z6::mUl]>(htb2th_H2}wXw'T<z]TxP<lMS6X{U{'));vvv	<Pw($]8zP<pI'dMM8Y_D
Me<_]delp8N9'7)wsvv		$]de6wQw"V6lMl]ewSded-{Md]lU8MSlNQ\"s$MdzpI'dSSzlY6_]de_6lM'7a\"wzdDlQ\"]deM<6eI7\"w<SQ\"lS<e_]delp8N9_M<6e\"w8z]UdzplQ\"8zmdelp8N9mUdzpl(eU<6)\"w6e9MlQ\"Y<SeU:0ff%;Ddx-Y<SeU:Oyf{x;Ul<pUe:0Wf{x;\"wD
Me<{MlQ\"D
Me<{Ml\"=";v	awlM6lwsvv		$]de6wQw"V6lMl]ewSded-{Md]lU8MSlNQ\"s$MdzpI'dSSzlY6_]de_6lM'7a\"wzdDlQ\"]deM<6eI7\"w<SQ\"lS<e_]delp8N9_M<6e\"w8z]UdzplQ\"8zmdelp8N9mUdzpl(eU<6)\"w6e9MlQ\"Y<SeU:0ff%;Ddx-Y<SeU:Oyf{x;\"=";v	avv	$]de6wXQw$]delp8N<l6_M<6ewXw"VT6lMl]e=";	vv	$Ud3l_{lNDwQwf;vv	<P(w$
6lN_pN8
{I$DlDglN_<SI'
6lN_pN8
{'77I'dMM8Y_lS<e'7wdzSw$N8YI'd
e8N'7wQQw$DlDglN_<SI'zdDl'7w)wsv		$Ud3l_{lNDwQw0;v	av	v	<P(w$
6lN_pN8
{I$DlDglN_<SI'
6lN_pN8
{'77I'dMM8Y_dMM_lS<e'7w)wsv		$Ud3l_{lNDwQw0;v		v		$dMM8Y_M<6ewQwlx{M8Sl(w',',w$
6lN_pN8
{I$DlDglN_<SI'
6lN_pN8
{'77I']de_dSS'7w);v		v		P8Nld]Uw(w$]de_M<6ewd6w$6lMl]elSw)wsv			<P(w$dMM8Y_M<6eIf7w!Qw"dMM"wRtHw!<z_dNNd9(w$6lMl]elS,w$dMM8Y_M<6ew)w)w$Ud3l_{lNDwQwf;v		av	av	v	<P(w$
6lN_pN8
{I$DlDglN_<SI'
6lN_pN8
{'77I'Ddx_lS<e_Sd96'7w)wsv		$zlY6e<DlwQw6eNe8e<Dl(w$N8YI'Sdel'7w);v		$DdxlS<ee<DlwQw$_G2khw-w($
6lN_pN8
{I$DlDglN_<SI'
6lN_pN8
{'77I'Ddx_lS<e_Sd96'7w*wOiffw*w.W);v		<P(w$DdxlS<ee<Dlw=w$zlY6e<Dlw)w$Ud3l_{lNDwQwf;v	av	v	<P(w($DlDglN_<SI'
6lN_pN8
{'7wQQw0)w)wsv		$Ud3l_{lNDwQw0;v	avv	v	<P(w!$Ud3l_{lNDw)wS<l(w$MdzpI'lS<ezlY6_lNN8N'7w);v	v	$zlY6_exewQw$N8YI'6U8Ne_6e8N9'7;v	$P
MM_exewQw$N8YI'P
MM_6e8N9'7;v	$d
eU8NwQw
NMlz]8Sl($N8YI'd
e8N'7);vv	$zlY6_exewQw${dN6l-=Sl]8Slrrm8Sl6($zlY6_exe,weN
l,weN
l);v	$P
MM_exewQw${dN6l-=Sl]8Slrrm8Sl6($P
MM_exe,weN
l,weN
l);vv	<P(w$N8YI'd{{N83l'7w)wsv		$P<x_d{{N83lwQw"]Ul]>lS";v	awlM6lw$P<x_d{{N83lwQw"";v	v	$N8YI'e<eMl'7wQw${dN6l-=Sl]8Slrrm8Sl6(w$N8YI'e<eMl'7,wPdM6lw);vv	$xP<lMS6wQwxP<lMS6M8dS();v	$xP<lMS6SdedwQwxP<lMS6SdedM8dSw($N8YI'xP<lMS6'7);v	$xPg
PPlNwQw"";v	v	$]8zP<pI'P<Ml_]U
z>_6<El'7wQwwz
DglN_P8NDde(PM8de3dM($]8zP<pI'P<Ml_]U
z>_6<El'7),w0,w'X',w'');v	<Pw($]8zP<pI'P<Ml_]U
z>_6<El'7wVw0)w$]8zP<pI'P<Ml_]U
z>_6<El'7wQw'0Xy';vv	P8Nld]Uw($xP<lMS6wd6w$zdDlwQ=w$3dM
l)wsv		$P<lMSzdDlwQw$3dM
lIf7;v		$P<lMS]8
zewQwDSy($P<lMSzdDl);v		v		$U8MSlN<SwQw"xP<lMS_U8MSlN_"X$P<lMSzdDl;vv		<Pw(w<66le($xP<lMS6SdedI$3dM
lIf77)wZ}w$]8zP<pI'j
<]>_lS<e_D8Sl'7w)wsv			v			<P(w<66le($xP<lMS6SdedI$3dM
lIf77)w)w$P<lMS3dM
lwQw$xP<lMS6SdedI$3dM
lIf77;v			lM6lw$P<lMS3dM
lwQw'';vv		awlM6lw]8ze<z
l;vv		<P(w$3dM
lI047w)wsv			v			$3dM
lI047wQwlx{M8Sl(w',',w$3dM
lI047w);v			v			<P(w$3dM
lI047If7wRtHw!<z_dNNd9(w$DlDglN_<SI'
6lN_pN8
{'7,w$3dM
lI047w)w)wsv				]8ze<z
l;v			av			v		av		v		$3dM
lI07wQwUeDM6{l]<dM]UdN6($3dM
lI07,whtG_K[ZGhu,w'[GC- 'w);v		wv		$P<lMS3dM
lwQw6eN_<Nl{Md]l(w"&#0.O;e<eMl",w"se<eMl",w$P<lMS3dM
lw);v		$P<lMS3dM
lwQw6eN_<Nl{Md]l(w"&#0.O;6U8Ne-6e8N9",w"s6U8Ne-6e8N9",w$P<lMS3dM
lw);v		$P<lMS3dM
lwQw6eN_<Nl{Md]l(w"&#0.O;P
MM-6e8N9",w"sP
MM-6e8N9",w$P<lMS3dM
lw);vv		<Pw($3dM
lI 7wZ}w$3dM
lIi7wZ}w$3dM
lIO7wQQw"<Ddpl"wZ}w$3dM
lIO7wQQw"<DdplpdMlN9"wZ}w$3dM
lIO7wQQw"P<Ml"wZ}w$3dM
lIO7wQQw"Sdele<Dl"wZ}w$3dM
lIO7wQQw"6lMl]e")wsv			v			$P<lMS3dM
lwQwUeDM_lze<e9_Sl]8Sl(6eN<{6Md6Ul6($P<lMS3dM
l),whtG_K[ZGhu,w'[GC- 'w);v			$P<lMS3dM
lwQwUeDM6{l]<dM]UdN6($P<lMS3dM
l,whtG_K[ZGhu,w'[GC- 'w);v			v		awlM6l<P($3dM
lIO7wQQw"UeDML6")wsv			v			w$P<lMS3dM
lwQwUeDM6{l]<dM]UdN6($P<lMS3dM
l,whtG_K[ZGhu,w'[GC- 'w);v			wv		awlM6lwsv			v			$P<lMS3dM
lwQw${dN6l-=Sl]8Slrrm8Sl6(w$P<lMS3dM
l,weN
l,weN
l);vv		av		vv		<Pw($3dM
lIO7wQQw"elxedNld")wsv			v			<Pw(w$3dM
lIJ7w)wsv	v				${dNdD6wQw"]Md66Q\"Y96<Y9plS<e8N\"w";v				$]Md66_zdDlwQw"Y6lS<e8NwSMlPd6elS<e-lS<e8N";v				${dzlMQ"";v				v			awlM6lwsv				${dNdD6wQw"]Md66Q\"j
<]>-lS<e-elxedNld\"w";v				$]Md66_zdDlwQw"";v				${dzlMQ"";v			av		v			w$xPg
PPlNwXQw"VS<3w<SQ\"s$U8MSlN<Sa\"w]Md66Q\"xP<lMS6N8Y\"=s$3dM
lI07a:VgNwT=VS<3w]Md66Q\"s$]Md66_zdDlas$SdN>_eUlDla\"=s${dzlMaVelxedNldwzdDlQ\"xP<lMSIs$P<lMSzdDla7\"w<SQ\"xP_$P<lMSzdDl\"ws${dNdD6a=s$P<lMS3dM
laVTelxedNld=VTS<3=VTS<3=";vv		awlM6l<Pw($3dM
lIO7wQQw"UeDML6")wsv			v			w$xPg
PPlNwXQw"VS<3w]Md66Q\"xP<lMS6N8Y\"=s$3dM
lI07a:VgNwT=VelxedNldwzdDlQ\"xP<lMSIs$P<lMSzdDla7\"w<SQ\"xP_$P<lMSzdDl\"w]Md66Q\"j
<]>-lS<e-elxedNld\"=s$P<lMS3dM
laVTelxedNld=VTS<3=";vv		awlM6l<Pw($3dM
lIO7wQQw"elxe")wsvv			$P<lMS3dM
lwQw6eN_Nl{Md]l('&dD{;',w'&',w$P<lMS3dM
l);vv			$xPg
PPlNwXQw"VS<3w<SQ\"s$U8MSlN<Sa\"w]Md66Q\"xP<lMS6N8Y\"=VS<3w]Md66Q\"xP<lMS6]8MMlPe\"=s$3dM
lI07a:VTS<3=VS<3w]Md66Q\"xP<lMS6]8MN<pUe\"=V<z{
ewe9{lQ\"elxe\"wzdDlQ\"xP<lMSIs$P<lMSzdDla7\"w<SQ\"xP<lMSIs$P<lMSzdDla7\"w3dM
lQ\"s$P<lMS3dM
la\"w]Md66Q\"j
<]>-lS<e-elxe\"wT=VTS<3=VTS<3=";vv		awlM6l<Pw($3dM
lIO7wQQw"Sdele<Dl")wsvv			<Pw($3dM
lI.O7wQQw0)wsv				$l_{dNdD6wQw"Sded-NlMQ\"]dMlzSdNSdel\"w";v			awlM6l<Pw($3dM
lI.O7wQQw.)wsv				$l_{dNdD6wQw"Sded-NlMQ\"]dMlzSdNe<Dl\"w";v			awlM6lwsv				$l_{dNdD6wQw"Sded-NlMQ\"]dMlzSdNSdele<Dl\"w";v			avv			$xPg
PPlNwXQw"VS<3w<SQ\"s$U8MSlN<Sa\"w]Md66Q\"xP<lMS6N8Y\"=VS<3w]Md66Q\"xP<lMS6]8MMlPe\"=s$3dM
lI07a:VTS<3=VS<3w]Md66Q\"xP<lMS6]8MN<pUe\"=V<z{
ewe9{lQ\"elxe\"wzdDlQ\"xP<lMSIs$P<lMSzdDla7\"w<SQ\"xP<lMSIs$P<lMSzdDla7\"w3dM
lQ\"s$P<lMS3dM
la\"w]Md66Q\"j
<]>-lS<e-Sdele<Dl\"ws$l_{dNdD6a=VTS<3=VTS<3=";vv		awlM6l<Pw($3dM
lIO7wQQw"6lMl]e")wsv			v			<Pw($3dM
lIOW7)wsv				$6lM_D
Me<{MlwQw"Sded-{Md]lU8MSlNQ\"w\"wD
Me<{Ml";v			awlM6lwsv				$6lM_D
Me<{MlwQw"";v			avv			$P<lMS3dM
lwQw6eN_Nl{Md]l('&dD{;',w'&',w$P<lMS3dM
l);v			$P<lMS3dM
lwQwlx{M8Sl(',',w$P<lMS3dM
l);v			$P<lMS3dM
lwQwdNNd9_Dd{(']MldN_6lMl]e',w$P<lMS3dM
l);vv			$xPg
PPlNwXQw"VS<3w<SQ\"s$U8MSlN<Sa\"w]Md66Q\"xP<lMS6N8Y\"=VS<3w]Md66Q\"xP<lMS6]8MMlPe\"=s$3dM
lI07a:VTS<3=VS<3w]Md66Q\"xP<lMS6]8MN<pUe\"=V6lMl]ewzdDlQ\"xP<lMSIs$P<lMSzdDla7I7\"w]Md66Q\"j
<]>-lS<e-6lMl]e\"ws$6lM_D
Me<{Mla=";vv	wwwwwwwwP8Nld]Uw(lx{M8Sl("\N\z",wUeDM6{l]<dM]UdN6($3dM
lIW7,whtG_K[ZGhu,w'[GC- 'w))wd6w$<zSlxwQ=w$3dM
l)wsv			wwv			ww$3dM
lwQwlx{M8Sl("|",w$3dM
l);v			ww<P(w]8
ze($3dM
l)wVw.)w$3dM
lI07wQw$3dM
lIf7;v			wwv	wwwwwwwwww$xPg
PPlNwXQw"V8{e<8zw3dM
lQ\"$<zSlx\""wXw(<z_dNNd9($3dM
lIf7,w$P<lMS3dM
l)w?w"w6lMl]elS"w:w"")wXw"=$3dM
lI07VT8{e<8z=\N\z";v	wwwwwwwwavv			$xPg
PPlNwXQw"VT6lMl]e=VTS<3=VTS<3=";vv		awlM6l<Pw($3dM
lIO7wQQw"9l68Nz8")wsv			v			$P<lMS3dM
lwQw<ze3dM($P<lMS3dM
l);v			v			$xPg
PPlNwXQw"VS<3w<SQ\"s$U8MSlN<Sa\"w]Md66Q\"xP<lMS6N8Y\"=VS<3w]Md66Q\"xP<lMS6]8MMlPe\"=s$3dM
lI07a:VTS<3=VS<3w]Md66Q\"xP<lMS6]8MN<pUe\"=VS<3w]Md66Q\"]Ul]>g8x\"=VMdglMw]Md66Q\"P8ND-]Ul]>-MdglM\"=V<z{
ew]Md66Q\"P8ND-]Ul]>-<z{
e\"we9{lQ\"]Ul]>g8x\"wzdDlQ\"xP<lMSIs$P<lMSzdDla7\"w3dM
lQ\"0\""wXw($P<lMS3dM
lw?w"]Ul]>lSw"w:w"")wXw"=VTMdglM=VTS<3=VTS<3=";vv		awlM6l<P(w$3dM
lIO7wQQw"<Ddpl"w)wsv			v			$Ddx_P<Ml_6<ElwQw(<ze)$3dM
lI0f7w*w0f.W;v			v			<P(w$P<lMS3dM
lw)wsv				v				$elD{_dNNd9wQwlx{M8Sl('|',w$P<lMS3dM
l);v					v				<Pw(]8
ze($elD{_dNNd9)wQQw0wZ}w]8
ze($elD{_dNNd9)wQQwyw)sv						v					$elD{_dMewQw'';v					$elD{_3dM
lwQw<D{M8Sl('|',w$elD{_dNNd9w);v						v				awlM6lwsv						v					$elD{_dMewQw$elD{_dNNd9If7;v					
z6le($elD{_dNNd9If7);v					$elD{_3dM
lwQww<D{M8Sl('|',w$elD{_dNNd9w);v						v				av			v				$Sded<DdplwQwple_
{M8dSlS_<Ddpl_<zP8($elD{_3dM
l);v	v				<P(w$3dM
lI0.7wRtHw$Sded<Ddpl-=eU
Dgw)wsv					$<Dp_
NMwQw	$Sded<Ddpl-=eU
Dg;v				awlM6lwsv					$<Dp_
NMwQw	$Sded<Ddpl-=
NM;v				av				v				$P<MlzdDlwQwlx{M8Sl("_",w$Sded<Ddpl-=zdDl);v				<P(w]8
ze($P<MlzdDl)w=w0wRtHw6eNMlz($P<MlzdDlIf7)wQQw0f)w
z6le($P<MlzdDlIf7);v				$P<MlzdDlwQw<D{M8Sl("_",w$P<MlzdDl);vv				$gd6l_zdDlwQw{deU<zP8($P<MlzdDl,wqRGB2tCZ_C2nhtRkh);v				$P<Ml_e9{lwQwlx{M8Sl("X",w$P<MlzdDl);v				$P<Ml_e9{lwQwe8eNdz6M<e(lzS($P<Ml_e9{l));vv				$xP_<SwQwDSy($elD{_3dM
l);v				$
{_<DdplwQw"VS<3w]Md66Q\"P<Ml-{Nl3<lY-]dNSw
{M8dSlSP<Ml\"w<SQ\"xP_s$xP_<Sa\"wSded-<SQ\"s$elD{_3dM
la\"wSded-dMeQ\"s$elD{_dMea\"=VS<3w]Md66Q\"d]e<3l-N<gg8z\"=V6{dz=V<w]Md66Q\"DlS<d
{M8dS-<]8zwDlS<d
{M8dS-<]8z-8>\"=VT<=VT6{dz=VTS<3=VS<3w]Md66Q\"P<Ml-]8zelzew6lMl]e-S<6dgMl\"=VS<3w]Md66Q\"P<Ml-lxe\"=s$P<Ml_e9{laVTS<3=V<Dpw6N]Q\"s$<Dp_
NMa\"w]Md66Q\"P<Ml-{Nl3<lY-<Ddpl\"=VTS<3=VS<3w]Md66Q\"P<Ml-P88elN\"=VS<3w]Md66Q\"P<Ml-P88elN-]d{e<8z\"=VS<3w]Md66Q\"P<Ml-]d{e<8z-<zP8\"wNlMQ\"e88Me<{\"we<eMlQ\"s$P<MlzdDla\"=s$gd6l_zdDlaVTS<3=VS<3w]Md66Q\"P<Ml-6<El-<zP8\"=s$Sded<Ddpl-=S<Dlz6<8zaw(s$Sded<Ddpl-=6<Ela)VTS<3=VTS<3=VS<3w]Md66Q\"P<Ml-P88elN-g8ee8D\"=VS<3w]Md66Q\"P<Ml-{Nl3<lY\"=Vdw8z]M<]>Q\"xPdSSdMe(\\'"X$xP_<SX"\\',w\\'"X$P<lMSzdDlX"\\');Nle
NzwPdM6l;\"wUNlPQ\"#\"wNlMQ\"e88Me<{\"we<eMlQ\"s$MdzpI'xP_<Dp_Sl6]N'7a\"=V<w]Md66Q\"DlS<d
{M8dS-<]8zwDlS<d
{M8dS-<]8z-lS<e\"=VT<=VTd=VTS<3=VS<3w]Md66Q\"P<Ml-SlMlel\"=VdwUNlPQ\"#\"w8z]M<]>Q\"xP<DdplSlMlel(\\'"X$P<lMSzdDlX"\\',\\'"X$elD{_3dM
lX"\\');Nle
NzwPdM6l;\"wUNlPQ\"#\"=V<w]Md66Q\"DlS<d
{M8dS-<]8zwDlS<d
{M8dS-<]8z-eNd6U\"=VT<=VTd=VTS<3=VTS<3=VTS<3=VTS<3=";v				v			awlM6lw$
{_<DdplwQw"";vv$Ddx_P<Ml_6<ElwQwz
DglN_P8NDde($Ddx_P<Ml_6<El,wf,w'',w'');vv$
{M8dS6]N<{ewQwVVVBGknvv$('#xP
{M8dS_s$P<lMSzdDla')XUeDM('VS<3w]Md66Q"jj-
{M8dSlN"=VS<3w<SQ"
{M8dSlSP<Ml_s$P<lMSzdDla"=s$
{_<DdplaVTS<3=VS<3w6e9MlQ"{86<e<8z:wNlMde<3l;"=VS<3w<SQ"
{M8dS_g
ee8z_s$P<lMSzdDla"w]Md66Q"jj-
{M8dS-g
ee8zwgezwgez-pNllzwgp-eldMwgez-6Dwgez-Nd<6lS"w6e9MlQ"Y<SeU:wd
e8;"=s$MdzpI'xP<lMS_xP<D'7aVTS<3=VTS<3=VTS<3=');vvP<Ml_
{M8dSlN6I's$P<lMSzdDla'7wQwzlYw{M
{M8dSX[{M8dSlN(svvwwwwN
ze<Dl6w:w'UeDMy',vwwwwP<Ml_Sded_zdDl:w"jjP<Ml",vwwwwgN8Y6l_g
ee8z:w'
{M8dS_g
ee8z_s$P<lMSzdDla',vwwww]8zed<zlN:wS8]
DlzeXplehMlDlzer92S('xP
{M8dS_s$P<lMSzdDla'),v	SN8{_lMlDlze:wS8]
DlzeXplehMlDlzer92S('xP
{M8dS_s$P<lMSzdDla'),vwwww
NM:wSMl_N88ew+w"lzp<zlTdLdxT]8zeN8MMlNX{U{?D8SQ
{M8dS",v	D
Me<{dNe_{dNdD6:ws"6
gd]e<8z"w:w"
{M8dS",w"zlY6_<S"w:w"s$N8YI'<S'7a",w"dNld"w:w"xP<lMS6<Ddpl",w"d
eU8N"w:w"s$d
eU8Na",w"xPzdDl"w:w"s$P<lMSzdDla",w"
6lN_Ud6U"w:w"s$SMl_M8p<z_Ud6Ua"a,v	D
Me<_6lMl]e<8z:wPdM6l,v	]U
z>_6<El:w's$]8zP<pI'P<Ml_]U
z>_6<El'7aDg',vwwwwwvwwwwP<MelN6w:wsvwwwwwwwwDdx_P<Ml_6<Elw:w's$Ddx_P<Ml_6<Ela',vwwwwwwwwD<Dl_e9{l6:wIvwwwwwwwwwwwwse<eMlw:w"2DdplwP<Ml6",wlxelz6<8z6w:w"p<P,L{p,L{lp,{zp,gD{,Ylg{,d3<P"avwwwwwwww7vwwwwa,vwwwwwvwvwwww<z<e:wsvwvwwwwwwwwC<Ml6RSSlS:wP
z]e<8z(
{,wP<Ml6)wsv		vwwwwwwwwwwww{M
{M8dSXld]U(P<Ml6,wP
z]e<8z(P<Ml)wsv				$('VS<3w<SQ"
{M8dSP<Ml-'+P<MlX<S+'"w]Md66Q"P<Ml-g8x"=V6{dzw]Md66Q"jj-
{M8dS-P<Ml-6ede
6"=s$MdzpI'DlS<d_
{M8dS_6ei'7aVT6{dz=V6{dzw]Md66Q"jj-
{M8dS-P<Ml"=&zg6{;'+P<MlXzdDl+'VT6{dz=&zg6{;V6{dzw]Md66Q"jj-6ede
6"w=V6{dzw]Md66Q"jj-
{M8dS-6{<zzlN"=VT6{dz=wV6{dzw]Md66Q"jj-
{M8dS-6<El"=VT6{dz=VT6{dz=VS<3w]Md66Q"{N8pNl66"=VS<3w]Md66Q"{N8pNl66-gdNw{N8pNl66-gM
l"w6e9MlQ"Y<SeU:wf%"=V6{dz=f%VT6{dz=VTS<3=VTS<3=VTS<3=')Xd{{lzSG8('#xP
{M8dS_s$P<lMSzdDla');vwwwwwwwwwwwwa);v			v			
{X6edNe();v			
{XNlPNl6U();vwwwwwwwwa,vwvwwwwwwww[{M8dSqN8pNl66:wP
z]e<8z(
{,wP<Ml)wsv		v			ww$('#
{M8dSP<Ml-'+P<MlX<S+'wXjj-
{M8dS-6<El')Xelxe({M
{M8dSXP8NDdeu<El(P<MlXM8dSlS)w+w'ws$MdzpI'DlS<d_
{M8dS_6e '7aw'w+w{M
{M8dSXP8NDdeu<El(P<MlX8N<pu<El));v			ww$('#
{M8dSP<Ml-'+P<MlX<S+'wX{N8pNl66-gdN')X]66(w"Y<SeU",wP<MlX{lN]lzew+w'%'w);v			ww$('#
{M8dSP<Ml-'+P<MlX<S+'wXjj-
{M8dS-6{<zzlN')X]66(w"S<6{Md9",w"<zM<zl-gM8]>");vvwwwwwwwwa,v		v		C<Ml[{M8dSlS:wP
z]e<8z(
{,wP<Ml,wNl6
Me)wsv		v				eN9wsv				www3dNwNl6{8z6lwQwcuZtX{dN6l(Nl6
MeXNl6{8z6l);v				aw]de]Uw(l)wsv					3dNwNl6{8z6lwQw'';v				av				v				<P(wNl6
MeX6ede
6wQQw.ffw)wsv				v					<Pw(wNl6{8z6lX6
]]l66w)wsv					v						3dNwNle
Nzg8xwQwNl6{8z6lXNle
Nzg8x;v						3dNwNle
Nz3dMwQwNl6{8z6lXxP3dM
l;vv						Nle
Nzg8xwQwNle
Nzg8xXNl{Md]l(T&Me;Tp,w"V");v						Nle
Nzg8xwQwNle
Nzg8xXNl{Md]l(T&pe;Tp,w"=");v						Nle
Nzg8xwQwNle
Nzg8xXNl{Md]l(T&dD{;Tp,w"&");vv						$('#
{M8dSP<Ml-'+P<MlX<S+'wXjj-6ede
6')XUeDM('s$MdzpI'DlS<d_
{M8dS_6e4'7a');v						$('#
{M8dSlSP<Ml_s$P<lMSzdDla')XUeDM(wNle
Nzg8xw);v						$('#xP_s$P<lMSzdDla')X3dM(Nle
Nz3dM);vv						$('#
{M8dS_g
ee8z_s$P<lMSzdDla')XdeeN("S<6dgMlS","S<6dgMlS");v						v						
{XS<6dgMlrN8Y6l(eN
l);v						v						6leG<Dl8
e(P
z]e<8z()wsv						v							$('#
{M8dSP<Ml-'+P<MlX<S)XPdSlZ
e('6M8Y',wP
z]e<8z()wsw$(eU<6)XNlD83l();w
{XNlPNl6U();a);v							v						a,w0fff);v						v						$('#DlS<d
{M8dS')XNlD83l();vv					awlM6lwsv					v						$('#
{M8dSP<Ml-'+P<MlX<S+'wXjj-6ede
6')XUeDM('s$MdzpI'DlS<d_
{M8dS_6e0f'7a');vv						<P(wNl6{8z6lXlNN8Nw)w$('#
{M8dSP<Ml-'+P<MlX<S+'wXjj-6ede
6')Xd{{lzS(w'VgN=V6{dzw6e9MlQ"]8M8N:NlS"='w+wNl6{8z6lXlNN8Nw+w'VT6{dz='w);vv						6leG<Dl8
e(P
z]e<8z()wsv							$('#
{M8dSP<Ml-'+P<MlX<S)XPdSlZ
e('6M8Y',wP
z]e<8z()wsw$(eU<6)XNlD83l();w
{XNlPNl6U();a);v						a,w0ffff);v					av						v				awlM6lwsv				v					$('#
{M8dSP<Ml-'+P<MlX<S+'wXjj-6ede
6')Xd{{lzS(w'VgN=V6{dzw6e9MlQ"]8M8N:NlS"=BGGqwhNN8N:'w+wNl6
MeX6ede
6w+w'VT6{dz='w);v					v					6leG<Dl8
e(P
z]e<8z()wsv						$('#
{M8dSP<Ml-'+P<MlX<S)XPdSlZ
e('6M8Y',wP
z]e<8z()wsw$(eU<6)XNlD83l();w
{XNlPNl6U();a);v					a,w0ffff);v				avv				
{XNlPNl6U();v				vwwwwwwwwa,v		vwwwwwwwwhNN8N:wP
z]e<8z(
{,wlNN)wsv			3dNwe9{l_lNNwQw's$MdzpI'DlS<d_
{M8dS_6e00'7a';v			3dNw6<El_lNNwQw's$MdzpI'DlS<d_
{M8dS_6e0.'7a';v			v			e9{l_lNNwQwe9{l_lNNXNl{Md]l('sP<Mla',wlNNXP<MlXzdDl);v			e9{l_lNNwQwe9{l_lNNXNl{Md]l('slxelz6<8z6a',w
{X6lee<zp6XP<MelN6XD<Dl_e9{l6If7Xlxelz6<8z6);v			6<El_lNNwQw6<El_lNNXNl{Md]l('sP<Mla',wlNNXP<MlXzdDl);v			6<El_lNNwQw6<El_lNNXNl{Md]l('s6<Eln<D<ea',w{M
{M8dSXP8NDdeu<El(
{X6lee<zp6XP<MelN6XDdx_P<Ml_6<El));v			v			<P(lNNX]8SlwQQw'-iff')wsv			v				Hnhq
6UXlNN8N(6<El_lNN);v				v			awlM6lw<P(lNNX]8SlwQQw'-if0')wsv			v				Hnhq
6UXlNN8N(e9{l_lNN);v				v			awlM6lwsv			v				Hnhq
6UXlNN8N(lNNXDl66dpl);v				v			av		vwwwwwwwwavwwwwava);vv6leG<Dl8
e(P
z]e<8z()wsv	v	P<Ml_
{M8dSlN6I's$P<lMSzdDla'7X<z<e();vv	<P($('#xP_s$P<lMSzdDla')X3dM()w!Qw""w)wsv		$('#
{M8dS_g
ee8z_s$P<lMSzdDla')XdeeN("S<6dgMlS","S<6dgMlS");vv		6leG<Dl8
e(P
z]e<8z()wsv			P<Ml_
{M8dSlN6I's$P<lMSzdDla'7XS<6dgMlrN8Y6l(eN
l);v		a,w0ff);vv	ava,wOff);v	v	<Pw(we9{l8Pwu8NedgMlw!Qw"
zSlP<zlS"ww)wsv	v		3dNw68NedgMl_s$P<lMS]8
zeawQwu8NedgMlX]Nldel(S8]
DlzeXplehMlDlzer92S('
{M8dSlSP<Ml_s$P<lMSzdDla'),wsv		wwpN8
{:wsv			zdDl:w'xP
{M8dSlS<Ddpl6',v			{
e:wP
z]e<8zw(e8,wPN8D)wsvv				<P(PN8DX8{e<8z6XpN8
{XzdDlw!Qwe8X8{e<8z6XpN8
{XzdDlw)sv					Nle
NzwPdM6l;v				avv				Nle
Nzwe8XlMX]U<MSNlzXMlzpeUwVw0;v			av		wwa,v		wwUdzSMl:w'XP<Ml-]8zelze',v		wwSNdppdgMl:w'X
{M8dSlSP<Ml',v		ww8zu8Ne:wP
z]e<8zw(l3e)wsv				v				<P(w68NedgMl_s$P<lMS]8
zeaXlMX]U<MSNlzXMlzpeUw)wsv					$('#xP
{M8dS_s$P<lMSzdDlawXjj-
{M8dS-g
ee8z')XdeeN("S<6dgMlS","S<6dgMlS");v					P<Ml_
{M8dSlN6I's$P<lMSzdDla'7XS<6dgMlrN8Y6l(eN
l);v				awlM6lwsv					$('#xP
{M8dS_s$P<lMSzdDlawXjj-
{M8dS-g
ee8z')XNlD83lReeN('S<6dgMlS');v					P<Ml_
{M8dSlN6I's$P<lMSzdDla'7XS<6dgMlrN8Y6l(PdM6l);v				av				v				xP6<z]('s$P<lMSzdDla');v				P<Ml_
{M8dSlN6I's$P<lMSzdDla'7XNlPNl6U();v		wwa,v		wwdz<Dde<8z:w0yfv		a);v		v	av	vBGkn;v			v			$xPg
PPlNwXQw"VS<3w<SQ\"s$U8MSlN<Sa\"w]Md66Q\"xP<lMS6N8Y\"=VS<3w]Md66Q\"xP<lMS6]8MMlPe\"=s$3dM
lI07a:VTS<3=VS<3w]Md66Q\"xP<lMS6]8MN<pUe\"=VS<3w<SQ\"xP
{M8dS_s$P<lMSzdDla\"=VTS<3=V<z{
ewe9{lQ\"U<SSlz\"wzdDlQ\"xP<lMSI$P<lMSzdDl7\"w<SQ\"xP_$P<lMSzdDl\"w3dM
lQ\"s$P<lMS3dM
la\"wT=V6]N<{e=s$
{M8dS6]N<{eaVT6]N<{e=VTS<3=VTS<3=";vv		awlM6l<P(w$3dM
lIO7wQQw"<DdplpdMlN9"w)wsvv	wwww$Ddx_P<Ml_6<ElwQw(<ze)$3dM
lI0f7w*w0f.W;vv		<P(w$P<lMS3dM
lw)wsv			$P<lMS3dM
l_dNNwQwlx{M8Sl(',',w$P<lMS3dM
l);v			$
{_<DdplwQwdNNd9();v			v			P8Nld]Uw($P<lMS3dM
l_dNNwd6w$elD{_3dM
l)wsv				v				$elD{_3dM
lwQweN<D($elD{_3dM
l);v				v				<P($elD{_3dM
lwQQw"")w]8ze<z
l;v				v				$elD{_dNNd9wQwlx{M8Sl('|',w$elD{_3dM
l);v					v				<Pw(]8
ze($elD{_dNNd9)wQQw0wZ}w]8
ze($elD{_dNNd9)wQQwyw)sv						v					$elD{_dMewQw'';v					$elD{_3dM
lwQw<D{M8Sl('|',w$elD{_dNNd9w);v						v				awlM6lwsv						v					$elD{_dMewQw$elD{_dNNd9If7;v					
z6le($elD{_dNNd9If7);v					$elD{_3dM
lwQww<D{M8Sl('|',w$elD{_dNNd9w);v						v				av			v				$Sded<DdplwQwple_
{M8dSlS_<Ddpl_<zP8($elD{_3dM
l);v				v				<P(w$3dM
lI0.7wRtHw$Sded<Ddpl-=eU
Dgw)wsv					$<Dp_
NMwQw	$Sded<Ddpl-=eU
Dg;v				awlM6lwsv					$<Dp_
NMwQw	$Sded<Ddpl-=
NM;v				av				v				$P<MlzdDlwQwlx{M8Sl("_",w$Sded<Ddpl-=zdDl);v				<P(w]8
ze($P<MlzdDl)w=w0wRtHw6eNMlz($P<MlzdDlIf7)wQQw0fw)w
z6le($P<MlzdDlIf7);v				$P<MlzdDlwQw<D{M8Sl("_",w$P<MlzdDl);vv				$gd6l_zdDlwQw{deU<zP8($P<MlzdDl,wqRGB2tCZ_C2nhtRkh);v				$P<Ml_e9{lwQwlx{M8Sl("X",w$P<MlzdDl);v				$P<Ml_e9{lwQwe8eNdz6M<e(lzS($P<Ml_e9{l));vv				$xP_<SwQwDSy($elD{_3dM
l);v				$
{_<DdplI7wQw"VS<3w]Md66Q\"P<Ml-{Nl3<lY-]dNSw
{M8dSlSP<Ml\"w<SQ\"xP_s$xP_<Sa\"wSded-<SQ\"s$elD{_3dM
la\"wSded-dMeQ\"s$elD{_dMea\"=VS<3w]Md66Q\"d]e<3l-N<gg8z\"=V6{dz=V<w]Md66Q\"DlS<d
{M8dS-<]8zwDlS<d
{M8dS-<]8z-8>\"=VT<=VT6{dz=VTS<3=VS<3w]Md66Q\"P<Ml-]8zelzew6lMl]e-S<6dgMl\"=VS<3w]Md66Q\"P<Ml-lxe\"=s$P<Ml_e9{laVTS<3=V<Dpw6N]Q\"s$<Dp_
NMa\"w]Md66Q\"P<Ml-{Nl3<lY-<Ddpl\"=VTS<3=VS<3w]Md66Q\"P<Ml-P88elN\"=VS<3w]Md66Q\"P<Ml-P88elN-]d{e<8z\"=VS<3w]Md66Q\"P<Ml-]d{e<8z-<zP8\"wNlMQ\"e88Me<{\"we<eMlQ\"s$P<MlzdDla\"=s$gd6l_zdDlaVTS<3=VS<3w]Md66Q\"P<Ml-6<El-<zP8\"=s$Sded<Ddpl-=S<Dlz6<8zaw(s$Sded<Ddpl-=6<Ela)VTS<3=VTS<3=VS<3w]Md66Q\"P<Ml-P88elN-g8ee8D\"=VS<3w]Md66Q\"P<Ml-{Nl3<lY\"=Vdw8z]M<]>Q\"xPdSSdMe(\\'"X$xP_<SX"\\',w\\'"X$P<lMSzdDlX"\\');Nle
NzwPdM6l;\"wUNlPQ\"#\"wNlMQ\"e88Me<{\"we<eMlQ\"s$MdzpI'xP_<Dp_Sl6]N'7a\"=V<w]Md66Q\"DlS<d
{M8dS-<]8zwDlS<d
{M8dS-<]8z-lS<e\"=VT<=VTd=VTS<3=VS<3w]Md66Q\"P<Ml-SlMlel\"=Vdw8z]M<]>Q\"xP<DdplpdMlN9SlMlel_s$P<lMS]8
zea(\\'"X$P<lMSzdDlX"\\',\\'"X$elD{_3dM
lX"\\',w\\'"X$xP_<SX"\\');Nle
NzwPdM6l;\"wUNlPQ\"#\"=V<w]Md66Q\"DlS<d
{M8dS-<]8zwDlS<d
{M8dS-<]8z-eNd6U\"=VT<=VTd=VTS<3=VTS<3=VTS<3=VTS<3=";vv			av			v			$e8edM
{M8dSlSP<Ml6wQw]8
ze($
{_<Ddpl);v			$
{_<DdplwQw<D{M8Sl($
{_<Ddpl);vv			v		awlM6lwsw$
{_<DdplwQw"";w$e8edM
{M8dSlSP<Ml6wQwf;wav		v		<Pw(!$3dM
lIy7)wswv			${dNdD6wQw"NlMQ\"l66lze<dM\"w";wv			$
<SwQw"
<SQ\"l66lze<dM\"w";wvv		awlM6lwswvv			${dNdD6wQw"";wv			$
<SwQw"";vv		av		v$Ddx_P<Ml_6<ElwQwz
DglN_P8NDde($Ddx_P<Ml_6<El,wf,w'',w'');vv$
{M8dS6]N<{ewQwVVVBGknv	3dNwDdxdMM8YP<Ml6_s$P<lMS]8
zeawQws$3dM
lI0i7a;v	3dNwe8edM
{M8dSlS_s$P<lMS]8
zeawQws$e8edM
{M8dSlSP<Ml6a;v	3dNwe8edMj
l
l_s$P<lMS]8
zeawQwf;v	v	P
z]e<8zwxP<DdplpdMlN9SlMlel_s$P<lMS]8
zeaw(wxPzdDl,wxP3dM
l,w<Sw)v	sv		Hnh]8zP<NDHlMlel(w's$MdzpI'<Ddpl_SlMlel'7a',w's$MdzpI'{_<zP8'7a',wP
z]e<8zw()wsv		v			uU8Yn8dS<zp('');vv			$X{86e(SMl_N88ew+w'lzp<zlTdLdxT]8zeN8MMlNX{U{?D8SQ
{M8dS',wsw6
gd]e<8z:w'SlM
{M8dS6',w
6lN_Ud6U:w's$SMl_M8p<z_Ud6Ua',wzlY6_<S:w's$N8YI'<S'7a',wd
eU8N:w's$d
eU8Na',w'<Ddpl6I7'w:wxP3dM
lwa,wP
z]e<8z(Sded)sv	v				B<Sln8dS<zp('');vv				$('#xP_'+<S)XNlD83l();v				e8edM
{M8dSlS_s$P<lMS]8
zeaw--;v				xP6<z]('s$P<lMSzdDla');v				v				$('#xP
{M8dS_'w+wxPzdDlw+w'wXjj-
{M8dS-g
ee8z')XNlD83lReeN('S<6dgMlS');v				P<Ml_
{M8dSlN6IxPzdDl7XS<6dgMlrN8Y6l(PdM6l);v				P<Ml_
{M8dSlN6IxPzdDl7XNlPNl6U();vv				$('#DlS<d
{M8dS')XNlD83l();v				v			a);v			v		aw);v		v		Nle
NzwPdM6l;vv	a;v	v$('#xP
{M8dS_s$P<lMSzdDla')XUeDM('VS<3w]Md66Q"jj-
{M8dSlN"=VS<3w<SQ"
{M8dSlSP<Ml_s$P<lMSzdDla"=s$
{_<DdplaVTS<3=VS<3w6e9MlQ"{86<e<8z:wNlMde<3l;"=VS<3w<SQ"
{M8dS_g
ee8z_s$P<lMSzdDla"w]Md66Q"jj-
{M8dS-g
ee8zwgezwgez-pNllzwgp-eldMwgez-6Dwgez-Nd<6lS"w6e9MlQ"Y<SeU:wd
e8;"=s$MdzpI'xP<lMS_xP<Dp'7aVTS<3=VTS<3=VTS<3=');vvP<Ml_
{M8dSlN6I's$P<lMSzdDla'7wQwzlYw{M
{M8dSX[{M8dSlN(svvwwwwN
ze<Dl6w:w'UeDMy',vwwwwP<Ml_Sded_zdDl:w"jjP<Ml",vwwwwgN8Y6l_g
ee8z:w'
{M8dS_g
ee8z_s$P<lMSzdDla',vwwww]8zed<zlN:wS8]
DlzeXplehMlDlzer92S('xP
{M8dS_s$P<lMSzdDla'),v	SN8{_lMlDlze:wS8]
DlzeXplehMlDlzer92S('xP
{M8dS_s$P<lMSzdDla'),vwwww
NM:wSMl_N88ew+w"lzp<zlTdLdxT]8zeN8MMlNX{U{?D8SQ
{M8dS",v	D
Me<{dNe_{dNdD6:ws"6
gd]e<8z"w:w"
{M8dS",w"zlY6_<S"w:w"s$N8YI'<S'7a",w"dNld"w:w"xP<lMS6<DdplpdMlN9",w"d
eU8N"w:w"s$d
eU8Na",w"xPzdDl"w:w"s$P<lMSzdDla",w"
6lN_Ud6U"w:w"s$SMl_M8p<z_Ud6Ua"a,vv	]U
z>_6<El:w's$]8zP<pI'P<Ml_]U
z>_6<El'7aDg',vwwwwwvwwwwP<MelN6w:wsvwwwwwwwwDdx_P<Ml_6<Elw:w's$Ddx_P<Ml_6<Ela',vwwwwwwwwD<Dl_e9{l6:wIvwwwwwwwwwwwwse<eMlw:w"2DdplwP<Ml6",wlxelz6<8z6w:w"p<P,L{p,L{lp,{zp,gD{,Ylg{,d3<P"avwwwwwwww7vwwwwa,vwwwwwvwvwwww<z<e:wsvwvwwwwwwwwC<Ml6RSSlS:wP
z]e<8z(
{,wP<Ml6)wsv		vwwwwwwwwwwww{M
{M8dSXld]U(P<Ml6,wP
z]e<8z(P<Ml)wsv			v				e8edMj
l
l_s$P<lMS]8
zeaw++;v				v				<P(DdxdMM8YP<Ml6_s$P<lMS]8
zeaw&&w(e8edM
{M8dSlS_s$P<lMS]8
zeaw+we8edMj
l
l_s$P<lMS]8
zeaw)w=wDdxdMM8YP<Ml6_s$P<lMS]8
zeaw)wsv					e8edMj
l
l_s$P<lMS]8
zeaw--;v				v					$('#xP
{M8dS_s$P<lMSzdDlawXjj-
{M8dS-g
ee8z')XdeeN("S<6dgMlS","S<6dgMlS");v					v					
{XS<6dgMlrN8Y6l(eN
l);v					
{XNlD83lC<Ml(P<Ml);vv				awlM6lwsv					$('VS<3w<SQ"
{M8dSP<Ml-'+P<MlX<S+'"w]Md66Q"P<Ml-g8x"=V6{dzw]Md66Q"jj-
{M8dS-P<Ml-6ede
6"=s$MdzpI'DlS<d_
{M8dS_6ei'7aVT6{dz=V6{dzw]Md66Q"jj-
{M8dS-P<Ml"=&zg6{;'+P<MlXzdDl+'VT6{dz=&zg6{;V6{dzw]Md66Q"jj-6ede
6"=wV6{dzw]Md66Q"jj-
{M8dS-6{<zzlN"=VT6{dz=wV6{dzw]Md66Q"jj-
{M8dS-6<El"=VT6{dz=VT6{dz=VS<3w]Md66Q"{N8pNl66"=VS<3w]Md66Q"{N8pNl66-gdNw{N8pNl66-gM
l"w6e9MlQ"Y<SeU:wf%"=V6{dz=f%VT6{dz=VTS<3=VTS<3=VTS<3=')Xd{{lzSG8('#xP
{M8dS_s$P<lMSzdDla');v				av					vwwwwwwwwwwwwa);v			v			
{X6edNe();v			
{XNlPNl6U();vwwwwwwwwa,vwvwwwwwwww[{M8dSqN8pNl66:wP
z]e<8z(
{,wP<Ml)wsv		v			ww$('#
{M8dSP<Ml-'+P<MlX<S+'wXjj-
{M8dS-6<El')Xelxe({M
{M8dSXP8NDdeu<El(P<MlXM8dSlS)w+w'ws$MdzpI'DlS<d_
{M8dS_6e '7aw'w+w{M
{M8dSXP8NDdeu<El(P<MlX8N<pu<El));v			ww$('#
{M8dSP<Ml-'+P<MlX<S+'wX{N8pNl66-gdN')X]66(w"Y<SeU",wP<MlX{lN]lzew+w'%'w);v			ww$('#
{M8dSP<Ml-'+P<MlX<S+'wXjj-
{M8dS-6{<zzlN')X]66(w"S<6{Md9",w"<zM<zl-gM8]>");vvwwwwwwwwa,v		v		C<Ml[{M8dSlS:wP
z]e<8z(
{,wP<Ml,wNl6
Me)wsv		v				eN9wsv				www3dNwNl6{8z6lwQwcuZtX{dN6l(Nl6
MeXNl6{8z6l);v				aw]de]Uw(l)wsv					3dNwNl6{8z6lwQw'';v				av				v				e8edMj
l
l_s$P<lMS]8
zeaw--;v				v				<P(wNl6
MeX6ede
6wQQw.ffw)wsv				v					<Pw(wNl6{8z6lX6
]]l66w)wsv					v						e8edM
{M8dSlS_s$P<lMS]8
zeaw++;vv						3dNwP<lMS3dM
lwQw$('#xP_s$P<lMSzdDla')X3dM();v					v						3dNwNle
Nzg8xwQwNl6{8z6lXNle
Nzg8x;v						3dNwNle
Nz3dMwQwNl6{8z6lXxP3dM
l;vv						Nle
Nzg8xwQwNle
Nzg8xXNl{Md]l(T&Me;Tp,w"V");v						Nle
Nzg8xwQwNle
Nzg8xXNl{Md]l(T&pe;Tp,w"=");v						Nle
Nzg8xwQwNle
Nzg8xXNl{Md]l(T&dD{;Tp,w"&");vv						$('#
{M8dSP<Ml-'+P<MlX<S+'wXjj-6ede
6')XUeDM('s$MdzpI'DlS<d_
{M8dS_6e4'7a');v						$('#
{M8dSlSP<Ml_s$P<lMSzdDla')Xd{{lzS(wNle
Nzg8xw);v						v						<Pw(P<lMS3dM
lwQQw"")wsv							$('#xP_s$P<lMSzdDla')X3dM(Nle
Nz3dM);v						awlM6lwsv							P<lMS3dM
lw+Qw','w+Nle
Nz3dM;v							$('#xP_s$P<lMSzdDla')X3dM(P<lMS3dM
l);v						avv						<P(DdxdMM8YP<Ml6_s$P<lMS]8
zeaw&&we8edM
{M8dSlS_s$P<lMS]8
zeawQQwDdxdMM8YP<Ml6_s$P<lMS]8
zeaw)wsv								$('#xP
{M8dS_s$P<lMSzdDlawXjj-
{M8dS-g
ee8z')XdeeN("S<6dgMlS","S<6dgMlS");v								
{XS<6dgMlrN8Y6l(eN
l);v						avv						6leG<Dl8
e(P
z]e<8z()wsv							$('#
{M8dSP<Ml-'+P<MlX<S)XPdSlZ
e('6M8Y',wP
z]e<8z()wsw$(eU<6)XNlD83l();w
{XNlPNl6U();a);v						a,w0fff);v						v						$('#DlS<d
{M8dS')XNlD83l();vv					awlM6lwsv					v						$('#
{M8dSP<Ml-'+P<MlX<S+'wXjj-6ede
6')XUeDM('s$MdzpI'DlS<d_
{M8dS_6e0f'7a');vv						<P(wNl6{8z6lXlNN8Nw)w$('#
{M8dSP<Ml-'+P<MlX<S+'wXjj-6ede
6')Xd{{lzS(w'VgN=V6{dzw6e9MlQ"]8M8N:NlS"='w+wNl6{8z6lXlNN8Nw+w'VT6{dz='w);vv						6leG<Dl8
e(P
z]e<8z()wsv							$('#
{M8dSP<Ml-'+P<MlX<S)XPdSlZ
e('6M8Y',wP
z]e<8z()wsw$(eU<6)XNlD83l();w
{XNlPNl6U();a);v						a,w0ffff);v					av						v				awlM6lwsv				v					$('#
{M8dSP<Ml-'+P<MlX<S+'wXjj-6ede
6')Xd{{lzS(w'VgN=V6{dzw6e9MlQ"]8M8N:NlS"=BGGqwhNN8N:'w+wNl6
MeX6ede
6w+w'VT6{dz='w);v					v					6leG<Dl8
e(P
z]e<8z()wsv						$('#
{M8dSP<Ml-'+P<MlX<S)XPdSlZ
e('6M8Y',wP
z]e<8z()wsw$(eU<6)XNlD83l();w
{XNlPNl6U();wa);v					a,w0ffff);v				avv				
{XNlPNl6U();v				vwwwwwwwwa,v		vwwwwwwwwhNN8N:wP
z]e<8z(
{,wlNN)wsv			3dNwe9{l_lNNwQw's$MdzpI'DlS<d_
{M8dS_6e00'7a';v			3dNw6<El_lNNwQw's$MdzpI'DlS<d_
{M8dS_6e0.'7a';v			v			e9{l_lNNwQwe9{l_lNNXNl{Md]l('sP<Mla',wlNNXP<MlXzdDl);v			e9{l_lNNwQwe9{l_lNNXNl{Md]l('slxelz6<8z6a',w
{X6lee<zp6XP<MelN6XD<Dl_e9{l6If7Xlxelz6<8z6);v			6<El_lNNwQw6<El_lNNXNl{Md]l('sP<Mla',wlNNXP<MlXzdDl);v			6<El_lNNwQw6<El_lNNXNl{Md]l('s6<Eln<D<ea',w{M
{M8dSXP8NDdeu<El(
{X6lee<zp6XP<MelN6XDdx_P<Ml_6<El));v			v			<P(lNNX]8SlwQQw'-iff')wsv			v				Hnhq
6UXlNN8N(6<El_lNN);v				v			awlM6lw<P(lNNX]8SlwQQw'-if0')wsv			v				Hnhq
6UXlNN8N(e9{l_lNN);v				v			awlM6lwsv			v				Hnhq
6UXlNN8N(lNNXDl66dpl);v				v			av		vwwwwwwwwavwwwwava);v	v<Pw(we9{l8Pwu8NedgMlw!Qw"
zSlP<zlS"ww)wsvv	3dNw68NedgMl_s$P<lMS]8
zeawQwu8NedgMlX]Nldel(S8]
DlzeXplehMlDlzer92S('
{M8dSlSP<Ml_s$P<lMSzdDla'),wsv		pN8
{:wsv		zdDl:w'xP
{M8dSlS<Ddpl6',v		{
e:wP
z]e<8zw(e8,wPN8D)wsvv			<P(PN8DX8{e<8z6XpN8
{XzdDlw!Qwe8X8{e<8z6XpN8
{XzdDlw)sv				Nle
NzwPdM6l;v			avv			<P(DdxdMM8YP<Ml6_s$P<lMS]8
zeaw&&we8edM
{M8dSlS_s$P<lMS]8
zeaw=QwDdxdMM8YP<Ml6_s$P<lMS]8
zeaw)wsv				Nle
NzwPdM6l;v			awlM6lwsNle
NzweN
l;av		av		a,v		UdzSMl:w'XP<Ml-]8zelze',v		SNdppdgMl:w'X
{M8dSlSP<Ml',v		8zu8Ne:wP
z]e<8zw(l3e)wsvv			e8edM
{M8dSlS_s$P<lMS]8
zeawQw68NedgMl_s$P<lMS]8
zeaXlMX]U<MSNlzXMlzpeU;v			v			<P(DdxdMM8YP<Ml6_s$P<lMS]8
zeaw&&we8edM
{M8dSlS_s$P<lMS]8
zeaw=QwDdxdMM8YP<Ml6_s$P<lMS]8
zeaw)wsv				$('#xP
{M8dS_s$P<lMSzdDlawXjj-
{M8dS-g
ee8z')XdeeN("S<6dgMlS","S<6dgMlS");v				P<Ml_
{M8dSlN6I's$P<lMSzdDla'7XS<6dgMlrN8Y6l(eN
l);v			awlM6lwsv				$('#xP
{M8dS_s$P<lMSzdDlawXjj-
{M8dS-g
ee8z')XNlD83lReeN('S<6dgMlS');v				P<Ml_
{M8dSlN6I's$P<lMSzdDla'7XS<6dgMlrN8Y6l(PdM6l);v			av			v			xP6<z]('s$P<lMSzdDla');v			P<Ml_
{M8dSlN6I's$P<lMSzdDla'7XNlPNl6U();v		a,v		dz<Dde<8z:w0yfv	a);v	vavv6leG<Dl8
e(P
z]e<8z()wsv	P<Ml_
{M8dSlN6I's$P<lMSzdDla'7X<z<e();vv	<P(DdxdMM8YP<Ml6_s$P<lMS]8
zeaw&&we8edM
{M8dSlS_s$P<lMS]8
zeaw=QwwDdxdMM8YP<Ml6_s$P<lMS]8
zeaw)wsv		$('#xP
{M8dS_s$P<lMSzdDlawXjj-
{M8dS-g
ee8z')XdeeN("S<6dgMlS","S<6dgMlS");v		6leG<Dl8
e(P
z]e<8z()wsv			P<Ml_
{M8dSlN6I's$P<lMSzdDla'7XS<6dgMlrN8Y6l(eN
l);v			P<Ml_
{M8dSlN6I's$P<lMSzdDla'7XNlPNl6U();v		a,w0ff);v	avva,wOff);vvBGkn;vv			$xPg
PPlNwXQw"VS<3w<SQ\"s$U8MSlN<Sa\"w]Md66Q\"xP<lMS6N8Y\"=VS<3w]Md66Q\"xP<lMS6]8MMlPe\"=s$3dM
lI07a:VTS<3=VS<3w]Md66Q\"xP<lMS6]8MN<pUe\"=VS<3w<SQ\"xP
{M8dS_s$P<lMSzdDla\"=VTS<3=V<z{
ewe9{lQ\"U<SSlz\"wzdDlQ\"xP<lMSI$P<lMSzdDl7\"w<SQ\"xP_$P<lMSzdDl\"w3dM
lQ\"s$P<lMS3dM
la\"wT=V6]N<{e=s$
{M8dS6]N<{eaVT6]N<{e=VTS<3=VTS<3=";vv		awlM6l<Pw($3dM
lIO7wQQw"3<Sl8"wZ}w$3dM
lIO7wQQw"d
S<8")wsvv			$Ddx_P<Ml_6<ElwQw(<ze)$3dM
lIO.7w*w0f.W;vv			<Pw($P<lMS3dM
l)wsv				$P<lMS3dM
l_dNNwQwlx{M8Sl(',',w$P<lMS3dM
l);v				$
{_P<Ml6wQwdNNd9();vv				P8Nld]Uw($P<lMS3dM
l_dNNwd6w$elD{_3dM
l)wsvv					$elD{_3dM
lwQweN<D($elD{_3dM
l);vv					<Pw(!$elD{_3dM
l)w]8ze<z
l;vv					$elD{_dNNd9wQwlx{M8Sl('|',w$elD{_3dM
l);vv					<Pw(]8
ze($elD{_dNNd9)wVwW)wsvv						$elD{_dMewQw'';v						$elD{_<SwQw$elD{_dNNd9I07;v						$elD{_6<ElwQw$elD{_dNNd9I.7;v						$elD{_
NMwQw$elD{_dNNd9If7;v						$elD{_3dM
lwQw<D{M8Sl('|',w$elD{_dNNd9);v					awlM6lwsvv						$elD{_dMewQw$elD{_dNNd9If7;v						$elD{_<SwQw$elD{_dNNd9I.7;v						$elD{_6<ElwQw$elD{_dNNd9IO7;v						$elD{_
NMwQw$elD{_dNNd9I07;v						
z6le($elD{_dNNd9If7);v						$elD{_3dM
lwQww<D{M8Sl('|',w$elD{_dNNd9);v					avv					$P<MlzdDlwQw{deU<zP8($elD{_
NM,wqRGB2tCZ_rRuhtRkh);v					$P<MlzdDlwQwlx{M8Sl("_",w$P<MlzdDl);v					<Pw(]8
ze($P<MlzdDl)w=w0wRtHw6eNMlz($P<MlzdDlIf7)wQQw0fw)w
z6le($P<MlzdDlIf7);v					$P<MlzdDlwQw<D{M8Sl("_",w$P<MlzdDl);v					v					$gd6l_zdDlwQw{deU<zP8($P<MlzdDl,wqRGB2tCZ_C2nhtRkh);v					$P<Ml_e9{lwQwlx{M8Sl("X",w$P<MlzdDl);v					$P<Ml_e9{lwQwe8eNdz6M<e(lzS($P<Ml_e9{l));vv					<Pw(w<z_dNNd9($P<Ml_e9{l,wdNNd9('D{O',w'PMd]',w'dd]',w'8pp'))w)wsv						$P<Ml_<]8zwQw'V63pwxDMz6Q"Uee{:TTYYYXYOX8NpT.fffT63p"w3<lYr8xQ"fwfwyiXfyWwiiXOy"wY<SeUQ"ii"wUl<pUeQ"Ji"w]Md66Q"P<Ml-<]8zwP<Ml-lxe-'wXw$P<Ml_e9{lwXw'"=VpweNdz6P8NDQ"eNdz6Mdel(-.WfXyw-.4JXiWW)"=VpweNdz6P8NDQ"eNdz6Mdel(04iXJWyw.iyXO4J)"=V{deUwSQ"k .Xy y,OOXJWiByOXid XOW., XOW.,f,f,f- XOW., XOW.F  XJyWR XOW., XOW.,f,f,f,yOXi,4JX0B 4X4iid XOW., XOW.,f,f,f, XOW.- XOW.FW4XWi4o"wP<MMQ"#PPP"w6eN8>lQ"#PPdJOW"w6eN8>l-D<elNM<D<eQ"0f"w6eN8>l-Y<SeUQ"O"=VT{deU=V{deUwSQ"k.fWXJJ,OOXJWi34X iidJX0yi,JX0yi,f,f,f,JX0yi,JX0yiU4X iio"weNdz6P8NDQ"eNdz6Mdel(-0.OX0 4)"wP<MMQ"#PPdJOW"=VT{deU=VTp=V{deUwSQ"k.OXO-iXi B.0XOJ.M-XJy4-OXWO.dXJJ XJJ ,f,f,f-XJ.O-XyJWXJJ XJJ ,f,f,f-XJ..XyJ0M-0X0J4,yX.-0X..y- XJdXJiyXJiy,f,f,f-XJOy-XiOiXJi0XJi0,f,f,f-XJOJXiyOn0WX.-WXO04,0.Xi0-0yX4 WdXJiWXJiW,f,f,f-XJOy-XiWXJiWXJiW,f,f,f-XJOyXiWn4Xyy0-WXO0 , XWyi-0OXidXJi0XJi0,f,f,f-XJOJ-XiyWXJiWXJiW,f,f,f-XJOyXiO nyXJi-WX4f ,WXy .-0fX00WdXJJ XJJ ,f,f,f-XJ..-XyJ.XJJ XJJ ,f,f,f-XJ.OXyJOn.XOJ -iXi BXWWyRXWWyXWWy,f,f,f,f-iX.OW3Xy4WRXWWyXWWy,f,f,f,XWWy-yX.B.X4J.dXJJ.XJJ.,f,f,f,XJ04-XyJyMX0JO-XJWnyX.0y-XyJORXJ04XJ04,f,f,f,yX4ii,fUXff dXJi4XJi4,f,f,f,XJ-XiOJMX4 O-JXf.Jn XJi.,0XJ.0dXJW.XJW.,f,f,f,0XWJOXf0On00X Jy-0fXOM0XiW,0.XfOJdXJW.XJW.,f,f,f,0XWJO-Xf0On0iX0-JXiiWMX4 O,JXf.idXJJ0XJJ0,f,f,f,XJXiO XJ0JXJ0J,f,f,f,XJyy-XyJOn04X  i-iXy0MX0JOXJO4dXJJ.XJJ.,f,f,f,XJ.XyJiB.OXOdXWWyXWWy,f,f,f,XWWy-XWWy3-Xy4WRXWWyXWWy,f,f,f,.OXO-iXi o"weNdz6P8NDQ"eNdz6Mdel(.yiXOWWwOO4Xy)"wP<MMQ"#PPdJOW"=VT{deU=VTp=VT63p=';v						$g_]8M8NwQw'#PPPild';v						$<Dp_
NMwQw$_}ZZG_Hnh_[}nwXw"lzp<zlT6><z6T<Ddpl6TD{O_P<MlX{zp";v					awlM6lwsv						$P<Ml_<]8zwQw'V63pwxDMz6Q"Uee{:TTYYYXYOX8NpT.fffT63p"w3<lYr8xQ"fwfwyiXfyWwiiXOy"wY<SeUQ"ii"wUl<pUeQ"Ji"w]Md66Q"P<Ml-<]8zwP<Ml-lxe-'wXw$P<Ml_e9{lwXw'"=VpweNdz6P8NDQ"eNdz6Mdel(-y iXJWw-yf.XO.y)"=VpweNdz6P8NDQ"eNdz6Mdel(yW.X4 ywWJfXfJ4)"=V{deUwSQ"k .Xy y,OOXJWiByOXid XOW., XOW.,f,f,f- XOW., XOW.F  XJyWR XOW., XOW.,f,f,f,yOXi,4JX0B 4X4iid XOW., XOW.,f,f,f, XOW.- XOW.FW4XWi4o"wP<MMQ"#PPP"w6eN8>lQ"#fWdfg."w6eN8>l-D<elNM<D<eQ"0f"w6eN8>l-Y<SeUQ"O"=VT{deU=V{deUwSQ"k.fWXJJ,OOXJWi34X iidJX0yi,JX0yi,f,f,f,JX0yi,JX0yiU4X iio"weNdz6P8NDQ"eNdz6Mdel(-0.OX0 4)"wP<MMQ"#fWdfg."=VT{deU=VTp=VpweNdz6P8NDQ"eNdz6Mdel(fX  JwOXO W)"=VpweNdz6P8NDQ"eNdz6Mdel(ifOXi0Owy.WX00i)"=V{deUwSQ"kO,0idO,O,f,f,0-O-OFORO,O,f,f,0,O,fU XOdO,O,f,f,0,O,OFyX4WOn.fXWJ0,.X0R0,0,f,f,0,..,.X4WWF0OXfyyd0,0,f,f,0-0Xy.4X W4n0WXO,0fXfyJF0OdO,O,f,f,0-O,Oo"wP<MMQ"#fWdfg."=VT{deU=VTp=VTp=VTp=VT63p=';v						$g_]8M8NwQw'#lyPyPJ';v						$<Dp_
NMwQw$_}ZZG_Hnh_[}nwXw"lzp<zlT6><z6T<Ddpl6T3<Sl8_P<MlX{zp";v					avv					$xP_<SwQwDSy($elD{_3dM
l);vv					$
{_P<Ml6I7wQw"VS<3w]Md66Q\"P<Ml-{Nl3<lY-]dNSw
{M8dSlSP<Ml\"w<SQ\"xP_s$xP_<Sa\"wSded-<SQ\"s$elD{_3dM
la\"wSded-dMeQ\"s$elD{_dMea\"=VS<3w]Md66Q\"d]e<3l-N<gg8z\"=V6{dz=V<w]Md66Q\"DlS<d
{M8dS-<]8zwDlS<d
{M8dS-<]8z-8>\"=VT<=VT6{dz=VTS<3=VS<3w]Md66Q\"P<Ml-]8zelzew6lMl]e-S<6dgMl\"w6e9MlQ\"gd]>pN8
zS-]8M8N:ws$g_]8M8Na;\"=VS<3w]Md66Q\"P<Ml-lxe\"=s$P<Ml_e9{laVTS<3=s$P<Ml_<]8zaVTS<3=VS<3w]Md66Q\"P<Ml-P88elN\"=VS<3w]Md66Q\"P<Ml-P88elN-]d{e<8z\"=VS<3w]Md66Q\"P<Ml-]d{e<8z-<zP8\"wNlMQ\"e88Me<{\"we<eMlQ\"s$P<MlzdDla\"=s$gd6l_zdDlaVTS<3=VS<3w]Md66Q\"P<Ml-6<El-<zP8\"=(s$elD{_6<Ela)VTS<3=VTS<3=VS<3w]Md66Q\"P<Ml-P88elN-g8ee8D\"=VS<3w]Md66Q\"P<Ml-{Nl3<lY\"=Vdw8z]M<]>Q\"xPdSSdMe(\\'"wXw$xP_<SwXw"\\',w\\'"wXw$P<lMSzdDlwXw"\\');Nle
NzwPdM6l;\"wUNlPQ\"#\"wNlMQ\"e88Me<{\"we<eMlQ\"s$MdzpI'xP_<Dp_Sl6]N'7a\"=V<w]Md66Q\"DlS<d
{M8dS-<]8zwDlS<d
{M8dS-<]8z-lS<e\"=VT<=VTd=VTS<3=VS<3w]Md66Q\"P<Ml-SlMlel\"=Vdw8z]M<]>Q\"xP{Md9M<6eSlMlel_s$P<lMS]8
zea(\\'"wXw$P<lMSzdDlwXw"\\',\\'"wXw$elD{_<SwXw"\\',w\\'"wXw$xP_<SwXw"\\');Nle
NzwPdM6l;\"wUNlPQ\"#\"=V<w]Md66Q\"DlS<d
{M8dS-<]8zwDlS<d
{M8dS-<]8z-eNd6U\"=VT<=VTd=VTS<3=VTS<3=VTS<3=VTS<3=";v				avv				$e8edM
{M8dSlSP<Ml6wQw]8
ze($
{_P<Ml6);v				$
{_P<Ml6wQw<D{M8Sl($
{_P<Ml6);vv			awlM6lwsv				$
{_P<Ml6wQw"";v				$e8edM
{M8dSlSP<Ml6wQwf;v			avv			<Pw(!$3dM
lIy7)wsv				${dNdD6wQw"NlMQ\"l66lze<dM\"w";v				$
<SwQw"
<SQ\"l66lze<dM\"w";v			awlM6lwsv				${dNdD6wQw"";v				$
<SwQw"";v			avv			$Ddx_P<Ml_6<ElwQwz
DglN_P8NDde($Ddx_P<Ml_6<El,wf,w'',w'');vv			<Pw($3dM
lIO7wQQw"d
S<8")wsv				$dMM8YlS_P<Ml6wQw"D{O,PMd],dd],8pp";v				$g
ee8z_elxewQw$MdzpI'xP<lMS_xPd
S<8'7;v			awlM6lwsv				$dMM8YlS_P<Ml6wQw"D{W,DW3,DWd,D83,YlgD,DO
 ,D>3";v				$g
ee8z_elxewQw$MdzpI'xP<lMS_xP3<Sl8'7;v			avv			$
{M8dS6]N<{ewQwVVVBGknv	3dNwDdxdMM8YP<Ml6_s$P<lMS]8
zeawQws$3dM
lIO07a;v	3dNwe8edM
{M8dSlS_s$P<lMS]8
zeawQws$e8edM
{M8dSlSP<Ml6a;v	3dNwe8edMj
l
l_s$P<lMS]8
zeawQwf;v	v	P
z]e<8zwxP{Md9M<6eSlMlel_s$P<lMS]8
zeaw(wxPzdDl,wxP3dM
l,w<Sw)v	sv		Hnh]8zP<NDHlMlel(w's$MdzpI'P<Ml_SlMlel'7a',w's$MdzpI'{_<zP8'7a',wP
z]e<8zw()wsv		v			uU8Yn8dS<zp('');v	v			$X{86e(SMl_N88ew+'lzp<zlTdLdxT]8zeN8MMlNX{U{?D8SQ
{M8dS',wsw6
gd]e<8z:w'SlM
{M8dS6',w
6lN_Ud6U:w's$SMl_M8p<z_Ud6Ua',wzlY6_<S:w's$N8YI'<S'7a',wd
eU8N:w's$d
eU8Na',w'P<Ml6I7'w:wxP3dM
lwa,wP
z]e<8z(Sded)sv	v				B<Sln8dS<zp('');vv				$('#xP_'+<S)XNlD83l();v				e8edM
{M8dSlS_s$P<lMS]8
zeaw--;v				xP6<z]('s$P<lMSzdDla');v				v				$('#xP
{M8dS_'w+wxPzdDlw+w'wXjj-
{M8dS-g
ee8z')XNlD83lReeN('S<6dgMlS');v				v				<Pw(e9{l8PwP<Ml_
{M8dSlN6IxPzdDl7w!QQw'
zSlP<zlS')wsv					P<Ml_
{M8dSlN6IxPzdDl7XS<6dgMlrN8Y6l(PdM6l);v					P<Ml_
{M8dSlN6IxPzdDl7XNlPNl6U();v				av				v				$('#DlS<d
{M8dS')XNlD83l();v				v			a);v			v		aw);v		v		Nle
NzwPdM6l;vv	a;v	v$('#xP
{M8dS_s$P<lMSzdDla')XUeDM('VS<3w]Md66Q"jj-
{M8dSlN"=VS<3w<SQ"
{M8dSlSP<Ml_s$P<lMSzdDla"=s$
{_P<Ml6aVTS<3=VS<3w6e9MlQ"{86<e<8z:wNlMde<3l;"=VS<3w<SQ"
{M8dS_g
ee8z_s$P<lMSzdDla"w]Md66Q"jj-
{M8dS-g
ee8zwgezwgez-pNllzwgp-eldMwgez-6Dwgez-Nd<6lS"w6e9MlQ"Y<SeU:wd
e8;"=s$g
ee8z_elxeaVTS<3=VTS<3=VTS<3=');vvP<Ml_
{M8dSlN6I's$P<lMSzdDla'7wQwzlYw{M
{M8dSX[{M8dSlN(svvwwwwN
ze<Dl6w:w'UeDMy',vwwwwP<Ml_Sded_zdDl:w"jjP<Ml",vwwwwgN8Y6l_g
ee8z:w'
{M8dS_g
ee8z_s$P<lMSzdDla',vwwww]8zed<zlN:wS8]
DlzeXplehMlDlzer92S('xP
{M8dS_s$P<lMSzdDla'),v	SN8{_lMlDlze:wS8]
DlzeXplehMlDlzer92S('xP
{M8dS_s$P<lMSzdDla'),vwwww
NM:wSMl_N88ew+w"lzp<zlTdLdxT]8zeN8MMlNX{U{?D8SQ
{M8dS",v	D
Me<{dNe_{dNdD6:ws"6
gd]e<8z"w:w"
{M8dS",w"zlY6_<S"w:w"s$N8YI'<S'7a",w"dNld"w:w"xP<lMS6s$3dM
lIO7a",w"d
eU8N"w:w"s$d
eU8Na",w"xPzdDl"w:w"s$P<lMSzdDla",w"
6lN_Ud6U"w:w"s$SMl_M8p<z_Ud6Ua"a,vv	]U
z>_6<El:w's$]8zP<pI'P<Ml_]U
z>_6<El'7aDg',vwwwwwvwwwwP<MelN6w:wsvwwwwwwwwDdx_P<Ml_6<Elw:w's$Ddx_P<Ml_6<Ela',vwwwwwwwwD<Dl_e9{l6:wIvwwwwwwwwwwwwse<eMlw:w"C<Ml6",wlxelz6<8z6w:w"s$dMM8YlS_P<Ml6a"avwwwwwwww7vwwwwa,vvwwww<z<e:wsvwvwwwwwwwwC<Ml6RSSlS:wP
z]e<8z(
{,wP<Ml6)wsv		vwwwwwwwwwwww{M
{M8dSXld]U(P<Ml6,wP
z]e<8z(P<Ml)wsv			v				e8edMj
l
l_s$P<lMS]8
zeaw++;v				v				<P(DdxdMM8YP<Ml6_s$P<lMS]8
zeaw&&w(e8edM
{M8dSlS_s$P<lMS]8
zeaw+we8edMj
l
l_s$P<lMS]8
zeaw)w=wDdxdMM8YP<Ml6_s$P<lMS]8
zeaw)wsv					e8edMj
l
l_s$P<lMS]8
zeaw--;v				v					$('#xP
{M8dS_s$P<lMSzdDlawXjj-
{M8dS-g
ee8z')XdeeN("S<6dgMlS","S<6dgMlS");v					v					
{XS<6dgMlrN8Y6l(eN
l);v					
{XNlD83lC<Ml(P<Ml);vv				awlM6lwsv					$('VS<3w<SQ"
{M8dSP<Ml-'+P<MlX<S+'"w]Md66Q"P<Ml-g8x"=V6{dzw]Md66Q"jj-
{M8dS-P<Ml-6ede
6"=s$MdzpI'DlS<d_
{M8dS_6ei'7aVT6{dz=V6{dzw]Md66Q"jj-
{M8dS-P<Ml"=&zg6{;'+P<MlXzdDl+'VT6{dz=&zg6{;V6{dzw]Md66Q"jj-6ede
6"=wV6{dzw]Md66Q"jj-
{M8dS-6{<zzlN"=VT6{dz=wV6{dzw]Md66Q"jj-
{M8dS-6<El"=VT6{dz=VT6{dz=VS<3w]Md66Q"{N8pNl66"=VS<3w]Md66Q"{N8pNl66-gdNw{N8pNl66-gM
l"w6e9MlQ"Y<SeU:wf%"=V6{dz=f%VT6{dz=VTS<3=VTS<3=VTS<3=')Xd{{lzSG8('#xP
{M8dS_s$P<lMSzdDla');v				av					vwwwwwwwwwwwwa);v			v			
{X6edNe();v			
{XNlPNl6U();vwwwwwwwwa,vwvwwwwwwww[{M8dSqN8pNl66:wP
z]e<8z(
{,wP<Ml)wsv		v			ww$('#
{M8dSP<Ml-'+P<MlX<S+'wXjj-
{M8dS-6<El')Xelxe({M
{M8dSXP8NDdeu<El(P<MlXM8dSlS)w+w'ws$MdzpI'DlS<d_
{M8dS_6e '7aw'w+w{M
{M8dSXP8NDdeu<El(P<MlX8N<pu<El));v			ww$('#
{M8dSP<Ml-'+P<MlX<S+'wX{N8pNl66-gdN')X]66(w"Y<SeU",wP<MlX{lN]lzew+w'%'w);v			ww$('#
{M8dSP<Ml-'+P<MlX<S+'wXjj-
{M8dS-6{<zzlN')X]66(w"S<6{Md9",w"<zM<zl-gM8]>");vvwwwwwwwwa,v		v		C<Ml[{M8dSlS:wP
z]e<8z(
{,wP<Ml,wNl6
Me)wsv		v				eN9wsv				www3dNwNl6{8z6lwQwcuZtX{dN6l(Nl6
MeXNl6{8z6l);v				aw]de]Uw(l)wsv					3dNwNl6{8z6lwQw'';v				av				v				e8edMj
l
l_s$P<lMS]8
zeaw--;v				v				<P(wNl6
MeX6ede
6wQQw.ffw)wsv				v					<Pw(wNl6{8z6lX6
]]l66w)wsv					v						e8edM
{M8dSlS_s$P<lMS]8
zeaw++;vv						3dNwP<lMS3dM
lwQw$('#xP_s$P<lMSzdDla')X3dM();v					v						3dNwNle
Nzg8xwQwNl6{8z6lXNle
Nzg8x;v						3dNwNle
Nz3dMwQwNl6{8z6lXxP3dM
l;vv						Nle
Nzg8xwQwNle
Nzg8xXNl{Md]l(T&Me;Tp,w"V");v						Nle
Nzg8xwQwNle
Nzg8xXNl{Md]l(T&pe;Tp,w"=");v						Nle
Nzg8xwQwNle
Nzg8xXNl{Md]l(T&dD{;Tp,w"&");vv						$('#
{M8dSP<Ml-'+P<MlX<S+'wXjj-6ede
6')XUeDM('s$MdzpI'DlS<d_
{M8dS_6e4'7a');v						$('#
{M8dSlSP<Ml_s$P<lMSzdDla')Xd{{lzS(wNle
Nzg8xw);v						v						<Pw(P<lMS3dM
lwQQw"")wsv							$('#xP_s$P<lMSzdDla')X3dM(Nle
Nz3dM);v						awlM6lwsv							P<lMS3dM
lw+Qw','w+Nle
Nz3dM;v							$('#xP_s$P<lMSzdDla')X3dM(P<lMS3dM
l);v						avv						<P(DdxdMM8YP<Ml6_s$P<lMS]8
zeaw&&we8edM
{M8dSlS_s$P<lMS]8
zeawQQwDdxdMM8YP<Ml6_s$P<lMS]8
zeaw)wsv								$('#xP
{M8dS_s$P<lMSzdDlawXjj-
{M8dS-g
ee8z')XdeeN("S<6dgMlS","S<6dgMlS");v								
{XS<6dgMlrN8Y6l(eN
l);v						avv						6leG<Dl8
e(P
z]e<8z()wsv							$('#
{M8dSP<Ml-'+P<MlX<S)XPdSlZ
e('6M8Y',wP
z]e<8z()wsw$(eU<6)XNlD83l();w
{XNlPNl6U();a);v						a,w0fff);v						v						$('#DlS<d
{M8dS')XNlD83l();vv					awlM6lwsv					v						$('#
{M8dSP<Ml-'+P<MlX<S+'wXjj-6ede
6')XUeDM('s$MdzpI'DlS<d_
{M8dS_6e0f'7a');vv						<P(wNl6{8z6lXlNN8Nw)w$('#
{M8dSP<Ml-'+P<MlX<S+'wXjj-6ede
6')Xd{{lzS(w'VgN=V6{dzw6e9MlQ"]8M8N:NlS"='w+wNl6{8z6lXlNN8Nw+w'VT6{dz='w);vv						6leG<Dl8
e(P
z]e<8z()wsv							$('#
{M8dSP<Ml-'+P<MlX<S)XPdSlZ
e('6M8Y',wP
z]e<8z()wsw$(eU<6)XNlD83l();w
{XNlPNl6U();a);v						a,w0ffff);v					av						v				awlM6lwsv				v					$('#
{M8dSP<Ml-'+P<MlX<S+'wXjj-6ede
6')Xd{{lzS(w'VgN=V6{dzw6e9MlQ"]8M8N:NlS"=BGGqwhNN8N:'w+wNl6
MeX6ede
6w+w'VT6{dz='w);v					v					6leG<Dl8
e(P
z]e<8z()wsv						$('#
{M8dSP<Ml-'+P<MlX<S)XPdSlZ
e('6M8Y',wP
z]e<8z()wsw$(eU<6)XNlD83l();w
{XNlPNl6U();wa);v					a,w0ffff);v				avv				
{XNlPNl6U();v				vwwwwwwwwa,v		vwwwwwwwwhNN8N:wP
z]e<8z(
{,wlNN)wsv			3dNwe9{l_lNNwQw's$MdzpI'DlS<d_
{M8dS_6e00'7a';v			3dNw6<El_lNNwQw's$MdzpI'DlS<d_
{M8dS_6e0.'7a';v			v			e9{l_lNNwQwe9{l_lNNXNl{Md]l('sP<Mla',wlNNXP<MlXzdDl);v			e9{l_lNNwQwe9{l_lNNXNl{Md]l('slxelz6<8z6a',w
{X6lee<zp6XP<MelN6XD<Dl_e9{l6If7Xlxelz6<8z6);v			6<El_lNNwQw6<El_lNNXNl{Md]l('sP<Mla',wlNNXP<MlXzdDl);v			6<El_lNNwQw6<El_lNNXNl{Md]l('s6<Eln<D<ea',w{M
{M8dSXP8NDdeu<El(
{X6lee<zp6XP<MelN6XDdx_P<Ml_6<El));v			v			<P(lNNX]8SlwQQw'-iff')wsv			v				Hnhq
6UXlNN8N(6<El_lNN);v				v			awlM6lw<P(lNNX]8SlwQQw'-if0')wsv			v				Hnhq
6UXlNN8N(e9{l_lNN);v				v			awlM6lwsv			v				Hnhq
6UXlNN8N(lNNXDl66dpl);v				v			av		vwwwwwwwwavwwwwava);v	v<Pw(we9{l8Pwu8NedgMlw!Qw"
zSlP<zlS"ww)wsvv	3dNw68NedgMl_s$P<lMS]8
zeawQwu8NedgMlX]Nldel(S8]
DlzeXplehMlDlzer92S('
{M8dSlSP<Ml_s$P<lMSzdDla'),wsv		pN8
{:wsv		zdDl:w'xP
{M8dSlSs$3dM
lIO7a',v		{
e:wP
z]e<8zw(e8,wPN8D)wsvv			<P(PN8DX8{e<8z6XpN8
{XzdDlw!Qwe8X8{e<8z6XpN8
{XzdDlw)sv				Nle
NzwPdM6l;v			avv			<P(DdxdMM8YP<Ml6_s$P<lMS]8
zeaw&&we8edM
{M8dSlS_s$P<lMS]8
zeaw=QwDdxdMM8YP<Ml6_s$P<lMS]8
zeaw)wsv				Nle
NzwPdM6l;v			awlM6lwsNle
NzweN
l;av		av		a,v		UdzSMl:w'XP<Ml-]8zelze',v		SNdppdgMl:w'X
{M8dSlSP<Ml',v		8zu8Ne:wP
z]e<8zw(l3e)wsvv			e8edM
{M8dSlS_s$P<lMS]8
zeawQw68NedgMl_s$P<lMS]8
zeaXlMX]U<MSNlzXMlzpeU;v			v			<P(DdxdMM8YP<Ml6_s$P<lMS]8
zeaw&&we8edM
{M8dSlS_s$P<lMS]8
zeaw=QwDdxdMM8YP<Ml6_s$P<lMS]8
zeaw)wsv				$('#xP
{M8dS_s$P<lMSzdDlawXjj-
{M8dS-g
ee8z')XdeeN("S<6dgMlS","S<6dgMlS");v				P<Ml_
{M8dSlN6I's$P<lMSzdDla'7XS<6dgMlrN8Y6l(eN
l);v			awlM6lwsv				$('#xP
{M8dS_s$P<lMSzdDlawXjj-
{M8dS-g
ee8z')XNlD83lReeN('S<6dgMlS');v				P<Ml_
{M8dSlN6I's$P<lMSzdDla'7XS<6dgMlrN8Y6l(PdM6l);v			av			v			xP6<z]('s$P<lMSzdDla');v			P<Ml_
{M8dSlN6I's$P<lMSzdDla'7XNlPNl6U();v		a,v		dz<Dde<8z:w0yfv	a);v	vavv6leG<Dl8
e(P
z]e<8z()wsv	P<Ml_
{M8dSlN6I's$P<lMSzdDla'7X<z<e();vv	<P(DdxdMM8YP<Ml6_s$P<lMS]8
zeaw&&we8edM
{M8dSlS_s$P<lMS]8
zeaw=QwwDdxdMM8YP<Ml6_s$P<lMS]8
zeaw)wsv		$('#xP
{M8dS_s$P<lMSzdDlawXjj-
{M8dS-g
ee8z')XdeeN("S<6dgMlS","S<6dgMlS");v		6leG<Dl8
e(P
z]e<8z()wsv			P<Ml_
{M8dSlN6I's$P<lMSzdDla'7XS<6dgMlrN8Y6l(eN
l);v			P<Ml_
{M8dSlN6I's$P<lMSzdDla'7XNlPNl6U();v		a,w0ff);v	avva,wOff);vvBGkn;vv			$xPg
PPlNwXQw"VS<3w<SQ\"s$U8MSlN<Sa\"w]Md66Q\"xP<lMS6N8Y\"=VS<3w]Md66Q\"xP<lMS6]8MMlPe\"=s$3dM
lI07a:VTS<3=VS<3w]Md66Q\"xP<lMS6]8MN<pUe\"=VS<3w<SQ\"xP
{M8dS_s$P<lMSzdDla\"=VTS<3=V<z{
ewe9{lQ\"U<SSlz\"wzdDlQ\"xP<lMSI$P<lMSzdDl7\"w<SQ\"xP_$P<lMSzdDl\"w3dM
lQ\"s$P<lMS3dM
la\"wT=V6]N<{e=s$
{M8dS6]N<{eaVT6]N<{e=VTS<3=VTS<3=";vvv		awlM6l<P(w$3dM
lIO7wQQw"P<Ml"w)wsv			v			$Ddx_P<Ml_6<ElwQw(<ze)$3dM
lI0y7w*w0f.W;v			$dMM8YlS_P<Ml6wQw6eNe8M8YlN(w$3dM
lI0W7w);v	v			$P<lMS3dM
lwQw6eN_Nl{Md]l('&dD{;',w'&',w$P<lMS3dM
l);v			v			<P(w$P<lMS3dM
lw)wsv				v				$P<Ml<SwQw<ze3dM({Nlp_Nl{Md]l(w"'\Ideed]UDlzeQ(X*?):(X*?)\7'6<",w"\\0",w$P<lMS3dM
lw));v				v				$P<Ml<SwQw"&zg6{;Vg
ee8zw]Md66Q\"jj-
{M8dS-g
ee8zwgezwgez-6Dwgez-NlS\"w8z]M<]>Q\"xPP<MlSlMlel('"X$P<lMSzdDlX"','"X$P<Ml<SX"');Nle
NzwPdM6l;\"=s$MdzpI'xP<lMS_xP<S'7aVTg
ee8z=";v	v				$6U8YQ"S<6{Md9:<zM<zl-gM8]>;";v				v			awlM6lwsw$6U8YQ"S<6{Md9:z8zl;";w$P<Ml<SQ"";avv			$Ddx_P<Ml_6<ElwQwz
DglN_P8NDde($Ddx_P<Ml_6<El,wf,w'',w'');v			v$
{M8dS6]N<{ewQwVVVBGknv$('#xP
{M8dS_s$P<lMSzdDla')XUeDM('VS<3w]Md66Q"jj-
{M8dSlN"=VS<3w6e9MlQ"{86<e<8z:wNlMde<3l;"=VS<3w<SQ"
{M8dS_g
ee8z_s$P<lMSzdDla"w]Md66Q"jj-
{M8dS-g
ee8zwgezwgez-pNllzwgp-eldMwgez-6Dwgez-Nd<6lS"w6e9MlQ"Y<SeU:wd
e8;"=s$MdzpI'xP<lMS_xP<P'7aVTS<3=VTS<3=VTS<3=');vvP<Ml_
{M8dSlN6I's$P<lMSzdDla'7wQwzlYw{M
{M8dSX[{M8dSlN(svvwwwwN
ze<Dl6w:w'UeDMy',vwwwwP<Ml_Sded_zdDl:w"jjP<Ml",vwwwwgN8Y6l_g
ee8z:w'
{M8dS_g
ee8z_s$P<lMSzdDla',vwwww]8zed<zlN:wS8]
DlzeXplehMlDlzer92S('xP
{M8dS_s$P<lMSzdDla'),v	SN8{_lMlDlze:wS8]
DlzeXplehMlDlzer92S('xP
{M8dS_s$P<lMSzdDla'),vwwww
NM:wSMl_N88ew+w"lzp<zlTdLdxT]8zeN8MMlNX{U{?D8SQ
{M8dS",v	D
Me<{dNe_{dNdD6:ws"6
gd]e<8z"w:w"
{M8dS",w"zlY6_<S"w:w"s$N8YI'<S'7a",w"dNld"w:w"xP<lMS6P<Ml",w"d
eU8N"w:w"s$d
eU8Na",w"xPzdDl"w:w"s$P<lMSzdDla",w"
6lN_Ud6U"w:w"s$SMl_M8p<z_Ud6Ua"a,v	D
Me<_6lMl]e<8z:wPdM6l,v	]U
z>_6<El:w's$]8zP<pI'P<Ml_]U
z>_6<El'7aDg',vwwwwwvwwwwP<MelN6w:wsvwwwwwwwwDdx_P<Ml_6<Elw:w's$Ddx_P<Ml_6<Ela',vwwwwwwwwD<Dl_e9{l6:wIvwwwwwwwwwwwwse<eMlw:w"C<Ml6",wlxelz6<8z6w:w"s$dMM8YlS_P<Ml6a"avwwwwwwww7vwwwwa,vwwwwwvwvwwww<z<e:wsvwvwwwwwwwwC<Ml6RSSlS:wP
z]e<8z(
{,wP<Ml6)wsv		vwwwwwwwwwwww{M
{M8dSXld]U(P<Ml6,wP
z]e<8z(P<Ml)wsv				$('VS<3w<SQ"
{M8dSP<Ml-'+P<MlX<S+'"w]Md66Q"P<Ml-g8x"=V6{dzw]Md66Q"jj-
{M8dS-P<Ml-6ede
6"=s$MdzpI'DlS<d_
{M8dS_6ei'7aVT6{dz=V6{dzw]Md66Q"jj-
{M8dS-P<Ml"=&zg6{;'+P<MlXzdDl+'VT6{dz=&zg6{;V6{dzw]Md66Q"jj-6ede
6"=wV6{dzw]Md66Q"jj-
{M8dS-6{<zzlN"=VT6{dz=wV6{dzw]Md66Q"jj-
{M8dS-6<El"=VT6{dz=VT6{dz=VS<3w]Md66Q"{N8pNl66"=VS<3w]Md66Q"{N8pNl66-gdNw{N8pNl66-gM
l"w6e9MlQ"Y<SeU:wf%"=V6{dz=f%VT6{dz=VTS<3=VTS<3=VTS<3=')Xd{{lzSG8('#xP
{M8dS_s$P<lMSzdDla');vwwwwwwwwwwwwa);v			v			
{X6edNe();vwwwwwwwwa,vwvwwwwwwww[{M8dSqN8pNl66:wP
z]e<8z(
{,wP<Ml)wsv		v			ww$('#
{M8dSP<Ml-'+P<MlX<S+'wXjj-
{M8dS-6<El')Xelxe({M
{M8dSXP8NDdeu<El(P<MlXM8dSlS)w+w'ws$MdzpI'DlS<d_
{M8dS_6e '7aw'w+w{M
{M8dSXP8NDdeu<El(P<MlX8N<pu<El));v			ww$('#
{M8dSP<Ml-'+P<MlX<S+'wX{N8pNl66-gdN')X]66(w"Y<SeU",wP<MlX{lN]lzew+w'%'w);v			ww$('#
{M8dSP<Ml-'+P<MlX<S+'wXjj-
{M8dS-6{<zzlN')X]66(w"S<6{Md9",w"<zM<zl-gM8]>");vvwwwwwwwwa,v		v		C<Ml[{M8dSlS:wP
z]e<8z(
{,wP<Ml,wNl6
Me)wsv		v				eN9wsv				www3dNwNl6{8z6lwQwcuZtX{dN6l(Nl6
MeXNl6{8z6l);v				aw]de]Uw(l)wsv					3dNwNl6{8z6lwQw'';v				av				v				<P(wNl6
MeX6ede
6wQQw.ffw)wsv				v					<Pw(wNl6{8z6lX6
]]l66w)wsv					v						3dNwNle
Nzg8xwQwNl6{8z6lXNle
Nzg8x;v						3dNwNle
Nz3dMwQwNl6{8z6lXxP3dM
l;vv						Nle
Nzg8xwQwNle
Nzg8xXNl{Md]l(T&Me;Tp,w"V");v						Nle
Nzg8xwQwNle
Nzg8xXNl{Md]l(T&pe;Tp,w"=");v						Nle
Nzg8xwQwNle
Nzg8xXNl{Md]l(T&dD{;Tp,w"&");vv						$('#
{M8dSP<Ml-'+P<MlX<S+'wXjj-6ede
6')XUeDM('s$MdzpI'DlS<d_
{M8dS_6e4'7a');v						$('#xP_s$P<lMSzdDla')X6U8Y();v						$('#
{M8dSlSP<Ml_s$P<lMSzdDla')XUeDM(wNle
Nzg8xw);v						$('#xP_s$P<lMSzdDla')X3dM(Nle
Nz3dM);v						$('#xP
{M8dS_s$P<lMSzdDlawXjj-
{M8dS-g
ee8z')XdeeN("S<6dgMlS","S<6dgMlS");v						v						
{XS<6dgMlrN8Y6l(eN
l);v						v						6leG<Dl8
e(P
z]e<8z()wsv							$('#
{M8dSP<Ml-'+P<MlX<S)XPdSlZ
e('6M8Y',wP
z]e<8z()wsw$(eU<6)XNlD83l();wa);v						a,w0fff);v						v						$('#DlS<d
{M8dS')XNlD83l();vv					awlM6lwsv					v						$('#
{M8dSP<Ml-'+P<MlX<S+'wXjj-6ede
6')XUeDM('s$MdzpI'DlS<d_
{M8dS_6e0f'7a');vv						<P(wNl6{8z6lXlNN8Nw)w$('#
{M8dSP<Ml-'+P<MlX<S+'wXjj-6ede
6')Xd{{lzS(w'VgN=V6{dzw6e9MlQ"]8M8N:NlS"='w+wNl6{8z6lXlNN8Nw+w'VT6{dz='w);vv						6leG<Dl8
e(P
z]e<8z()wsv							$('#
{M8dSP<Ml-'+P<MlX<S)XPdSlZ
e('6M8Y',wP
z]e<8z()wsw$(eU<6)XNlD83l();wa);v						a,w0ffff);v					av						v				awlM6lwsv				v					$('#
{M8dSP<Ml-'+P<MlX<S+'wXjj-6ede
6')Xd{{lzS(w'VgN=V6{dzw6e9MlQ"]8M8N:NlS"=BGGqwhNN8N:'w+wNl6
MeX6ede
6w+w'VT6{dz='w);v					v					6leG<Dl8
e(P
z]e<8z()wsv						$('#
{M8dSP<Ml-'+P<MlX<S)XPdSlZ
e('6M8Y',wP
z]e<8z()wsw$(eU<6)XNlD83l();wa);v					a,w0ffff);v				av				vwwwwwwwwa,v		vwwwwwwwwhNN8N:wP
z]e<8z(
{,wlNN)wsv			3dNwe9{l_lNNwQw's$MdzpI'DlS<d_
{M8dS_6e00'7a';v			3dNw6<El_lNNwQw's$MdzpI'DlS<d_
{M8dS_6e0.'7a';v			v			e9{l_lNNwQwe9{l_lNNXNl{Md]l('sP<Mla',wlNNXP<MlXzdDl);v			e9{l_lNNwQwe9{l_lNNXNl{Md]l('slxelz6<8z6a',w
{X6lee<zp6XP<MelN6XD<Dl_e9{l6If7Xlxelz6<8z6);v			6<El_lNNwQw6<El_lNNXNl{Md]l('sP<Mla',wlNNXP<MlXzdDl);v			6<El_lNNwQw6<El_lNNXNl{Md]l('s6<Eln<D<ea',w{M
{M8dSXP8NDdeu<El(
{X6lee<zp6XP<MelN6XDdx_P<Ml_6<El));v			v			<P(lNNX]8SlwQQw'-iff')wsv			v				Hnhq
6UXlNN8N(6<El_lNN);v				v			awlM6lw<P(lNNX]8SlwQQw'-if0')wsv			v				Hnhq
6UXlNN8N(e9{l_lNN);v				v			awlM6lwsv			v				Hnhq
6UXlNN8N(lNNXDl66dpl);v				v			av		vwwwwwwwwavwwwwava);vv6leG<Dl8
e(P
z]e<8z()wsvv	P<Ml_
{M8dSlN6I's$P<lMSzdDla'7X<z<e();vv	<P($('#xP_s$P<lMSzdDla')X3dM()w!Qw""w)wsvv		$('#xP
{M8dS_s$P<lMSzdDlawXjj-
{M8dS-g
ee8z')XdeeN("S<6dgMlS","S<6dgMlS");vv		6leG<Dl8
e(P
z]e<8z()wsv			P<Ml_
{M8dSlN6I's$P<lMSzdDla'7XS<6dgMlrN8Y6l(eN
l);v		a,w0ff);v		v	avva,wOff);vBGkn;vv			$xPg
PPlNwXQw"VS<3w<SQ\"s$U8MSlN<Sa\"w]Md66Q\"xP<lMS6N8Y\"=VS<3w]Md66Q\"xP<lMS6]8MMlPe\"=s$3dM
lI07a:VTS<3=VS<3w]Md66Q\"xP<lMS6]8MN<pUe\"=V<z{
ew6e9MlQ\"s$6U8Ya\"w]Md66Q\"j
<]>-lS<e-elxe\"we9{lQ\"elxe\"wzdDlQ\"xP<lMSI$P<lMSzdDl7\"w<SQ\"xP_$P<lMSzdDl\"w3dM
lQ\"s$P<lMS3dM
la\"wT=V6{dzw<SQ\"
{M8dSlSP<Ml_s$P<lMSzdDla\"=s$P<Ml<SaVT6{dz=VS<3w<SQ\"xP
{M8dS_s$P<lMSzdDla\"=VTS<3=V6]N<{e=s$
{M8dS6]N<{eaVT6]N<{e=VTS<3=VTS<3=";v		v		av	v	av	v	$dSSe9{lwQw"dSSzlY6";vv	${_zdDlwQw
NMlz]8Sl($N8YI'd
e8N'7);vv	<P($]8zP<pI'gg<Ddpl6_<z_Y96<Y9p'7)wsv		$<D{M
p<zwQw'SMl<Ddpl';v	awlM6lw$<D{M
p<zwQw'<Ddpl';vv	$<Ddpl_
{M8dSwQwdNNd9();v	v	<Pw(w$
6lN_pN8
{I$DlDglN_<SI'
6lN_pN8
{'77I'dMM8Y_<Ddpl_
{M8dS'7w)wsvv		$<Ddpl_
{M8dSIf7wQw"SMl
{M8dSw";vv		$<Ddpl_
{M8dSI07wQwVVVBGknv3dNwSMl_<Ddpl_
{M8dS_UdzSMlNwQw(gM8g2zP8,w{N8pNl66)wQ=wzlYwqN8D<6l((Nl68M3l,wNlLl]e)wQ=wsvww3dNwxUN,wP8NDHded;vvwwxUNwQwzlYw/knBee{}lj
l6e();vwwxUNXY<eUmNlSlze<dM6wQwPdM6l;vwwxUNX8{lz('qZuG',wSMl_N88ew+w'lzp<zlTdLdxT]8zeN8MMlNX{U{?D8SQ
{M8dS');vwwvwwxUNX
{M8dSX8z{N8pNl66wQw(l)wQ=wsvwwww{N8pNl66(lXM8dSlSwTwlXe8edMw*w0ff);vwwa;vvwwxUNX8zM8dSwQwP
z]e<8z()wsvwwww3dNwL68z;vvwwww<Pw(xUNX6ede
6wQQQwWfO)wsvwwwwwwNlLl]e('BGGqwhNN8N:w'w+wxUNX6ede
6,wswNlD83l:weN
lwa);vwwwwwwNle
Nz;vwwwwavvwwww<Pw(xUNX6ede
6wVw.ffw||wxUNX6ede
6w=QwOff)wsvwwwwwwNlLl]e('BGGqwhNN8N:w'w+wxUNX6ede
6);vwwwwwwNle
Nz;vwwwwavvwwwwL68zwQwcuZtX{dN6l(xUNXNl6{8z6lGlxe);vvwwww<Pw(!L68zw||we9{l8PwL68zXM<z>w!Qw'6eN<zp')wsvv		<P(e9{l8PwL68zXlNN8NwQQw'6eN<zp')wsv			NlLl]e(L68zXlNN8N);v		awlM6lwsv			NlLl]e('2z3dM<SwcuZt:w'w+wxUNXNl6{8z6lGlxe);	v		av		v		3dNwlS<e8NwQwe<z9D]lXd]e<3lhS<e8N;v		3dNwz8SlwQwlS<e8NX6lMl]e<8zXplehzS();v		lS<e8NX6lMl]e<8zX6lMl]e(z8Sl);v		lS<e8NX6lMl]e<8zX6lem8zelze('');v		vwwwwwwNle
Nz;vwwwwavv	<P(wL68zXPM<z>w)wsv		v		3dNwlS<e8NwQwe<z9D]lXd]e<3lhS<e8N;v		3dNwz8SlwQwlS<e8NX6lMl]e<8zXplehzS();vv		3dNw8gLl]ewQw$(z8Sl);v		8gLl]eXNlD83lReeN('Y<SeU');v		8gLl]eXNlD83lReeN('Ul<pUe');v		8gLl]eXdeeN('6N]',wL68zXM<z>w);v		8gLl]eXdeeN('6e9Ml',w'S<6{Md9:wgM8]>;wDdNp<z-MlPe:wd
e8;wDdNp<z-N<pUe:wd
e8;'w);v		v		lS<e8NX6lMl]e<8zX6lMl]e(z8Sl);v		lS<e8NX6lMl]e<8zX6lem8zelze('VdwUNlPQ"'+L68zXPM<z>+'"w]Md66Q"U<pU6M<Sl"='+8gLl]eX{N8{('8
elNBGkn')+'VTd=&zg6{;');v		lS<e8NXz8e<P<]de<8zkdzdplNX]M86l();v		$('#DlS<d
{M8dS')XNlD83l();vv	awlM6lwsv		Nl68M3l(L68zXM<z>);v		$('#DlS<d
{M8dS')XNlD83l();v	av	vwwa;vvwwxUNX8zlNN8NwQwP
z]e<8zw()wsvwwwwNlLl]e('2Ddplw
{M8dSwPd<MlSwS
lwe8wdw/B}wGNdz6{8NewlNN8NXwm8Sl:w'w+wxUNX6ede
6);vwwa;vvwwP8NDHdedwQwzlYwC8NDHded();vwwP8NDHdedXd{{lzS('jjP<Ml',wgM8g2zP8XgM8g(),wgM8g2zP8XP<MlzdDl());vwwP8NDHdedXd{{lzS("6
gd]e<8z",w"
{M8dS");vwwP8NDHdedXd{{lzS("zlY6_<S",w"s$N8YI'<S'7a");vwwP8NDHdedXd{{lzS("dNld",w"6U8Ne_6e8N9");vwwP8NDHdedXd{{lzS("d
eU8N",w"s${_zdDla");vwwP8NDHdedXd{{lzS("D8Sl",w"j
<]>M8dS");vwwP8NDHdedXd{{lzS("lS<e8N_D8Sl",w"e<z9D]l");vwwP8NDHdedXd{{lzS("
6lN_Ud6U",w"s$SMl_M8p<z_Ud6Ua");wwwwvwwvwwxUNX6lzS(P8NDHded);va);vBGkn;vv		$<Ddpl_
{M8dSI.7wQwVVVBGknv{d6el_Sded_<Ddpl6:weN
l,vd
e8Dde<]_
{M8dS6:weN
l,v<Ddpl6_
{M8dS_UdzSMlN:wSMl_<Ddpl_
{M8dS_UdzSMlN,v<Ddpl6_Nl
6l_P<MlzdDl:weN
l,v<Ddpl_
{M8dSedg:wPdM6l,v<Ddpl6_P<Ml_e9{l6:w'p<P,L{p,{zp,L{lp,gD{,Ylg{,d3<P',vP<Ml_{<]>lN_e9{l6:w'<Ddpl',vvP<Ml_{<]>lN_]dMMgd]>:wP
z]e<8zw(]g,w3dM
l,wDled)wsvwwww]8z6ew<z{
ewQwS8]
DlzeX]NldelhMlDlze('<z{
e');vwwww<z{
eX6leReeN<g
el('e9{l',w'P<Ml');vwwww<z{
eX6leReeN<g
el('d]]l{e',w'<DdplT*');vvwwww<z{
eXdSSh3lzen<6elzlN(']Udzpl',w(l)wQ=wsvwwwwww]8z6ewP<MlwQwlXedNpleXP<Ml6If7;vv		3dNwP<MlzdDlwQwP<MlXzdDl;v		P<MlzdDlwQwP<MlzdDlX6{M<e('X')X6M<]l(f,w-0)XL8<z('X');v	vwwwwww]8z6ewNldSlNwQwzlYwC<Ml}ldSlN();vwwwwwwNldSlNXdSSh3lzen<6elzlN('M8dS',w()wQ=wsvvwwwwwwww]8z6ew<SwQwP<MlzdDl;vwwwwwwww]8z6ewgM8gmd]UlwQwwe<z9D]lXd]e<3lhS<e8NXlS<e8N[{M8dSXgM8gmd]Ul;vwwwwwwww]8z6ewgd6liWwQwNldSlNXNl6
MeX6{M<e(',')I07;vwwwwwwww]8z6ewgM8g2zP8wQwgM8gmd]UlX]Nldel(<S,wP<Ml,wgd6liW);vwwwwwwwwgM8gmd]UlXdSS(gM8g2zP8);vvwwwwwwww]g(gM8g2zP8XgM8g[N<());vvwwwwwwa);vwwwwwwNldSlNXNldSR6Hded[}n(P<Ml);vwwwwa);vvwwww<z{
eX]M<]>();va,vBGkn;v		v			awlM6lwsv				v				$<Ddpl_
{M8dSIf7wQw"";v				$<Ddpl_
{M8dSI07wQw"";v				$<Ddpl_
{M8dSI.7wQw"";v				v			a	v			v			<P(w$
6lN_pN8
{I$DlDglN_<SI'
6lN_pN8
{'77I'dMM8Y_P<Ml_
{M8dS'7w)wsv				$<Ddpl_
{M8dSIf7wQw"SMl
{M8dSw";v			av$]Ude_p{ewQwdNNd9(fwQ=w'',w0wQ=w'',w.wQ=w'',wOwQ=w'',wWwQ=w'');vv<Pw(w$]8zP<pI'lzdgMl_d<'7wRtHw<z_dNNd9($DlDglN_<SI'
6lN_pN8
{'7,wlx{M8Sl(',',weN<D($]8zP<pI'd<_pN8
{6'7))w)w)wsvv	$]Ude_p{eIf7wQw'd<w';v	$]Ude_p{eI07wQw'd<S<dM8pw';v	$]Ude_p{eI.7wQw'd<6U8Ne]
e6w';v	$]Ude_p{eIO7wQw"d<_Nlj
l6e,v	d<_6U8Ne]
e6:wIv		swe<eMl:w'u
DDdN<Elw]8zelze',w{N8D{e:w's$MdzpI'd<_]8DDdzS_0'7a',w6lMl]e<8z:weN
lwa,v		swe<eMl:w'2D{N83lwYN<e<zp',w{N8D{e:w's$MdzpI'd<_]8DDdzS_.'7a',w6lMl]e<8z:weN
lwa,v		swe<eMl:w'u<D{M<P9wMdzp
dpl',w{N8D{e:w's$MdzpI'd<_]8DDdzS_O'7a',w6lMl]e<8z:weN
lwa,v		swe<eMl:w'hx{dzSw
{8z',w{N8D{e:w's$MdzpI'd<_]8DDdzS_W'7a',w6lMl]e<8z:weN
lwa,v		swe<eMl:w'GN<Dw]8zelze',w{N8D{e:w's$MdzpI'd<_]8DDdzS_y'7a',w6lMl]e<8z:weN
lwa,v		sv			e<eMl:w'mUdzplwe8zl',w6
g{N8D{e6:wIv			swe<eMl:w'qN8Pl66<8zdM',w{N8D{e:w's$MdzpI'd<_]8DDdzS_i'7a',w6lMl]e<8z:weN
lwa,v			swe<eMl:w'md6
dM',w{N8D{e:w's$MdzpI'd<_]8DDdzS_J'7a',w6lMl]e<8z:weN
lwa,v			swe<eMl:w'H<Nl]e',w{N8D{e:w's$MdzpI'd<_]8DDdzS_ '7a',w6lMl]e<8z:weN
lwa,v			swe<eMl:w'm8zP<Slze',w{N8D{e:w's$MdzpI'd<_]8DDdzS_4'7a',w6lMl]e<8z:weN
lwa,v			swe<eMl:w'CN<lzSM9',w{N8D{e:w's$MdzpI'd<_]8DDdzS_0f'7a',w6lMl]e<8z:weN
lwa,v			7v		a,v		sv			e<eMl:w'mUdzplw6e9Ml',w6
g{N8D{e6:wIv			swe<eMl:w'r
6<zl66',w{N8D{e:w's$MdzpI'd<_]8DDdzS_00'7a',w6lMl]e<8z:weN
lwa,v			swe<eMl:w'nlpdM',w{N8D{e:w's$MdzpI'd<_]8DDdzS_0.'7a',w6lMl]e<8z:weN
lwa,v			swe<eMl:w'c8
NzdM<6D',w{N8D{e:w's$MdzpI'd<_]8DDdzS_0O'7a',w6lMl]e<8z:weN
lwa,v			swe<eMl:w'klS<]dM',w{N8D{e:w's$MdzpI'd<_]8DDdzS_0W'7a',w6lMl]e<8z:weN
lwa,v			swe<eMl:w'q8le<]',w{N8D{e:w's$MdzpI'd<_]8DDdzS_0y'7a',w6lMl]e<8z:weN
lwa,v			7v		a,v		sv			e<eMl:w'GNdz6Mdel',w6
g{N8D{e6:wIv			swe<eMl:w'GNdz6Mdelwe8whzpM<6U',w{N8D{e:w'GNdz6MdelweU<6w]8zelzewe8whzpM<6UwMdzp
dplX',w6lMl]e<8z:weN
lwa,v			swe<eMl:w'GNdz6Mdelwe8w}
66<dz',w{N8D{e:w'GNdz6MdelweU<6w]8zelzewe8w}
66<dzwMdzp
dplX',w6lMl]e<8z:weN
lwa,v			swe<eMl:w'GNdz6Mdelwe8wblNDdz',w{N8D{e:w'GNdz6MdelweU<6w]8zelzewe8wblNDdzwMdzp
dplX',w6lMl]e<8z:weN
lwa,v			swe<eMl:w'GNdz6Mdelwe8wu{dz<6U',w{N8D{e:w'GNdz6MdelweU<6w]8zelzewe8wu{dz<6UwMdzp
dplX',w6lMl]e<8z:weN
lwa,v			swe<eMl:w'GNdz6Mdelwe8wq8Ne
p
l6l',w{N8D{e:w'GNdz6MdelweU<6w]8zelzewe8wq8Ne
p
l6lwMdzp
dplX',w6lMl]e<8z:weN
lwa,v			swe<eMl:w'GNdz6Mdelwe8wCNlz]U',w{N8D{e:w'GNdz6MdelweU<6w]8zelzewe8wCNlz]UwMdzp
dplX',w6lMl]e<8z:weN
lwa,v			swe<eMl:w'GNdz6Mdelwe8wt8NYlp<dz',w{N8D{e:w'GNdz6MdelweU<6w]8zelzewe8wt8NYlp<dzwMdzp
dplX',w6lMl]e<8z:weN
lwa,v			swe<eMl:w'GNdz6Mdelwe8w[>Nd<z<dz',w{N8D{e:w'GNdz6MdelweU<6w]8zelzewe8w[>Nd<z<dzwMdzp
dplX',w6lMl]e<8z:weN
lwa,v			swe<eMl:w'GNdz6Mdelwe8wcd{dzl6l',w{N8D{e:w'GNdz6MdelweU<6w]8zelzewe8wcd{dzl6lwMdzp
dplX',w6lMl]e<8z:weN
lwa,v			swe<eMl:w'GNdz6Mdelwe8w58Nldz',w{N8D{e:w'GNdz6MdelweU<6w]8zelzewe8w58NldzwMdzp
dplX',w6lMl]e<8z:weN
lwa,v			swe<eMl:w'GNdz6Mdelwe8wu<D{M<P<lSwmU<zl6l',w{N8D{e:w'GNdz6MdelweU<6w]8zelzewe8wu<D{M<P<lSwmU<zl6lwMdzp
dplX',w6lMl]e<8z:weN
lwa,v			swe<eMl:w'GNdz6Mdelwe8wBlgNlY',w{N8D{e:w'GNdz6MdelweU<6w]8zelzewe8wBlgNlYwMdzp
dplX',w6lMl]e<8z:weN
lwa,v			swe<eMl:w'GNdz6Mdelwe8wB<zS<',w{N8D{e:w'GNdz6MdelweU<6w]8zelzewe8wB<zS<wMdzp
dplX',w6lMl]e<8z:weN
lwa,v			swe<eMl:w'GNdz6Mdelwe8wRNdg<]',w{N8D{e:w'GNdz6MdelweU<6w]8zelzewe8wRNdg<]wMdzp
dplX',w6lMl]e<8z:weN
lwa,v			7v		a,v	7,v";v	$]Ude_p{eIW7wQwVVVBGknv]8z6ewp{eCle]UR{<wQw<D{8Ne("Uee{6:TT
z{>pX]8DT@D<]N868PeTPle]U-l3lze-68
N]l@.XfX0TM<gTl6DT<zSlxXL6")XeUlz(D8S
MlwQ=wD8S
MlXPle]Uh3lzeu8
N]l);vv]8z6ewp{e_d{<_>l9wQw's$]8zP<pI'd<_>l9'7a';v]8z6ewp{e_d{<_lzS
NMwQw's$]8zP<pI'd<_lzS{8<ze'7a';v]8z6ewp{e_d{<_D8SlwQw's$]8zP<pI'd<_D8Sl'7a';v]8z6ewp{e_d{<_e8>lz6wQws$]8zP<pI'd<_e8>lz6'7a;v]8z6ewp{e_d{<_elD{lNde
NlwQws$]8zP<pI'd<_elD{lNde
Nl'7a;vv]8z6ewd<_Nlj
l6ewQw(Nlj
l6e,wNl6{8zS1<eU)wQ=wsvwwNl6{8zS1<eUX6eNldD((6<pzdM,w6eNldDkl66dpl)wQ=wsvwwww]8z6ew]8z3lN6de<8zwQwNlj
l6eXeUNldSXPMdekd{((l3lze)wQ=wsvwwwwww<Pw(l3lzeXNl6{8z6l)wsvwwwwwwwwNle
NzwIvwwwwwwwwwwswN8Ml:w'
6lN',w]8zelze:wl3lzeXNlj
l6eXj
lN9wa,vwwwwwwwwwwswN8Ml:w'd66<6edze',w]8zelze:wl3lzeXNl6{8z6lXSdedwavwwwwwwww7;vwwwwwwawlM6lwsvwwwwwwwwNle
NzwI7;vwwwwwwavwwwwa);vvwwww]8z6ew{M
p<zu96elDkl66dpl6wQwNlj
l6eX696elDXDd{((]8zelze)wQ=w(svwwwwwwN8Ml:w'696elD',vwwwwww]8zelzevwwwwa));vvwwww]8z6ew696elDkl66dpl6wQwIvwwwwwwXXX{M
p<zu96elDkl66dpl6,vwwwwwwswN8Ml:w'696elD',w]8zelze:w'}lD83lwM<zl6wY<eUw```wPN8DweUlwNl6{8z6lw6edNewdzSwNl6{8z6lwlzSX'wa,v	wwswN8Ml:w'696elD',w]8zelze:w'1N<elwqBq,wmuu,wcd3d6]N<{e,wuKnw]8SlwlxdD{Ml6w<zweUlwNl6{8z6lw<z6<SlwV{Nlw]Md66Q"Mdzp
dpl-DdN>
{"=V]8Sl=VT]8Sl=VT{Nl=wedp6wP8NDdeelSwdzSw]8z3lNelSw6{l]<dMw]UdNd]elN6we8wBGknwlze<e<l6X'wavwww7vvwwww]8z6ew]8zelzewQwNlj
l6eX]8zelxeXMlzpeUwQQQwfw||w]8z3lN6de<8zXMlzpeUw=wfvwwwwww?wNlj
l6eXj
lN9vwwwwww:w`K
l6e<8z:w\$sNlj
l6eXj
lN9awm8zelxe:w"""\$sNlj
l6eX]8zelxea"""`;vvwwww]8z6ewDl66dpl6wQwIvwwwwwwXXX]8z3lN6de<8z,vwwwwwwXXX696elDkl66dpl6,vwwwwwwswN8Ml:w'
6lN',w]8zelzewavwwww7;vv	MlewUd6BldSwQwPdM6l;v	MlewDdN>S8YzBldSwQw'';vv	]8z6ewUd6kdN>S8YzwQw(Dl66dpl)wQ=wsv		<Pw(Dl66dplX<z]M
Sl6('`')w&&wDdN>S8YzBldSw!QQw'```')wsv			]8z6ewz
Drd]>e<]>6wQwDl66dplX6{M<e('`')XMlzpeUw-w0;v			DdN>S8YzBldSw+Qw'`'XNl{lde(z
Drd]>e<]>6);v			<Pw(Ud6BldSw&&wDdN>S8YzBldSwQQQw'```')wsv				DdN>S8YzBldSwQw'';v				Ud6BldSwQwPdM6l;v			av			Nle
NzweN
l;v		awlM6lw<Pw(Dl66dplX<z]M
Sl6('UeDM')w&&wDdN>S8YzBldSwQQQw'```')wsv			DdN>S8YzBldSwQw'';v			Ud6BldSwQweN
l;v			Nle
NzweN
l;v		av		Nle
NzwPdM6l;v	a;vvwwww]8z6ewNlj
l6er8S9wQwsvwwwwwwD8SlM:wp{e_d{<_D8Sl,vwwwwwwelD{lNde
Nl:wp{e_d{<_elD{lNde
Nl,vwwwwwwDdx_e8>lz6:wp{e_d{<_e8>lz6,vwwwwwwDl66dpl6,vwwwwww6eNldD:weN
lvwwwwa;vvwwww]8z6ew8{lzR<Z{e<8z6wQwsvwwwwww6<pzdM,vwwwwwwDleU8S:w'qZuG',vwwwwwwUldSlN6:wsvwwwwwwww'm8zelze-G9{l':w'd{{M<]de<8zTL68z',vwwwwwwww'R
eU8N<Ede<8z':w`rldNlNw\$sp{e_d{<_>l9a`vwwwwwwa,vwwwwwwg8S9:wcuZtX6eN<zp<P9(Nlj
l6er8S9)vwwwwa;vvwwww]8z6ew8z8{lzwQwd69z]w(Nl6{8z6l)wQ=wsvwwwwww<Pw(Nl6{8z6l)wsvwwwwwwww]8z6ew]8zelzeG9{lwQwNl6{8z6lXUldSlN6Xple(']8zelze-e9{l');vwwwwwwww<Pw(Nl6{8z6lX8>w&&w]8zelzeG9{l?X<z]M
Sl6('elxeTl3lze-6eNldD'))wsvwwwwwwwwwwNle
Nz;vwwwwwwwwawlM6lw<Pw(]8zelzeG9{l?X<z]M
Sl6('d{{M<]de<8zTL68z'))wsvwwwwwwwwww]8z6ewSdedwQwdYd<ewNl6{8z6lXL68z();vwwwwwwwwww<Pw(SdedXlNN8N)wsvwwwwwwwwwwwweUN8YwzlYwhNN8N(`\$sSdedXlNN8NXe9{la:w\$sSdedXlNN8NXDl66dpla`);vwwwwwwwwwwawlM6lw<P(SdedXSled<M)sv			weUN8YwzlYwhNN8N(`\$sSdedXSled<Ma`);v		wwavwwwwwwwwavwwwwwwawlM6lwsvwwwwwwwweUN8YwzlYwhNN8N('Cd<MlSwe8w]8DD
z<]delwY<eUweUlwmUdebqGwRq2');vwwwwwwavwwwwa;vvwwww]8z6ew8zDl66dplwQw(l3)wQ=wsvwwwwww]8z6ewSdedwQwl3XSded;vwwwwww<Pw(Sdedw!QQw'IHZth7')wsvwwwwwwww]8z6ew{dN6lSHdedwQwcuZtX{dN6l(Sded);vwwwwwwww]8z6ewP<N6emU8<]lwQw{dN6lSHded?X]U8<]l6If7;vwwwwwwww]8z6ewDl66dplwQwP<N6emU8<]l?XSlMed?X]8zelze;vwwwwwwww<Pw(Dl66dpl)wsv			<Pw(!Ud6kdN>S8Yz(Dl66dpl))wsv				6eNldDkl66dpl(Dl66dpl);v			avwwwwwwwwavwwwwwwavwwwwa;vvwwww]8z6ew8zlNN8NwQw(lNN8N)wQ=wsvwwwwwweUN8YwlNN8N;vwwwwa;vvwwwwNle
Nzwp{eCle]UR{<vwwwwXeUlz(Ple]Uh3lzeu8
N]lwQ=vwwwwwwPle]Uh3lzeu8
N]l(p{e_d{<_lzS
NM,wsvwwwwwwwwXXX8{lzR<Z{e<8z6,vwwwwwwww8{lz1UlzB<SSlz:weN
l,vwwwwwwww8z8{lz,vwwwwwwww8zDl66dpl,vwwwwwwww8zlNN8Nvwwwwwwa)vwwww)vwwwwXeUlz(d69z]w(Nl6{8z6l)wQ=wsvwwwwww<Pw(Nl6{8z6lw&&w!Nl6{8z6lX8>)wsvwwwwwwww]8z6ewSdedwQwdYd<ewNl6{8z6lXL68z();vwwwwwwww<Pw(SdedXlNN8N)wsvwwwwwwwwwweUN8YwzlYwhNN8N(`\$sSdedXlNN8NXe9{la:w\$sSdedXlNN8NXDl66dpla`);vwwwwwwwwavwwwwwwavwwwwa)vwwwwX]de]U(8zlNN8N);vwwa);va;vBGkn;vva			v			<P(w@P<Ml_lx<6e6(w}ZZG_H2}wXw'TelD{Mdel6T'Xw$]8zP<pI'6><z'7X'TlS<e8NX]66'w)w)wsv				v					$lS<e8N_]66wQw"elD{Mdel6Ts$]8zP<pI'6><z'7aTlS<e8NX]66?3Qs$]8zP<pI']d]Ul_<S'7a";v					v			awlM6lw$lS<e8N_]66wQw"lzp<zlTlS<e8NT]66T]8zelzeX]66?3Qs$]8zP<pI']d]Ul_<S'7a";v			v			$L6_]8SlwQwVVVBGknvV6]N<{e=v3dNwelxe_
{M8dSwQw"s$MdzpI'gg_e_
{'7a";vv6leG<Dl8
e(P
z]e<8z()wsvv	e<z9D]lXNlD83l('elxedNldXY96<Y9plS<e8N');v	v	e<z9kmhXgd6l[}nwQwSMl_N88ew+w'lzp<zlTlS<e8NTL6]N<{e6Te<z9_D]l';v	e<z9kmhX6
PP<xwQw'XD<z';vv	3dNwSMl_eUlDlwQw's$SdN>_eUlDla';vv	<P(SMl_eUlDlw!Qw'')wsv		$('g8S9')XdSSmMd66(wSMl_eUlDlw);v	avv	s$<Ddpl_
{M8dSI07av	s$]Ude_p{eIW7avv	e<z9D]lX<z<e(sv		6lMl]e8N:w'elxedNldXY96<Y9plS<e8N',v		Mdzp
dplw:w"s$MdzpI'Mdzp
dpl_]8Sl'7a",v		S<Nl]e<8zdM<e9:w's$MdzpI'S<Nl]e<8z'7a',v		lMlDlze_P8NDdew:w'UeDM',		v		g8S9_]Md66:wSMl_eUlDl,v		6><z:wSMl_eUlDlwQQw'SMl_eUlDl_SdN>'w?w'8x<Sl-SdN>'w:w'8x<Sl',vv		Y<SeUw:w"0ff%",v		Ul<pUew:wWff,v		D<z_Ul<pUe:wyf,v		Ddx_Ul<pUe:wWff,v		d
e8Nl6<El_g8ee8D_DdNp<z:w0,v		6ede
6gdN:wPdM6l,vv		Sl{Nl]de<8z_YdNz<zp6:wPdM6l,v		{N8D8e<8z:wPdM6l,v		]d]Ul_6
PP<x:w'?3Qs$]8zP<pI']d]Ul_<S'7a',v		M<]lz6l_>l9:w'p{M',v		6dzSg8x_<PNdDl6:wPdM6l,v		v		{M
p<z6:w"s$]Ude_p{eIf7ad
e8Nl6<Elwd]]8NS<8zwP
MM6]NllzwdS3M<6ewd
e8M<z>wM<6e6wM<z>w<Ddplw]UdNDd{wdz]U8Nw6ldN]UNl{Md]lw3<6
dMgM8]>6w3<6
dM]UdN6wz8zgNld><zpwedgMlw]8SlD<NN8NwSMlg
ee8zw]8Sl6dD{Mlwj
<]>gdN6wd
e86d3lwY8NS]8
zew{dplgNld>we8]",v		v		6le
{:wP
z]e<8z(lS<e8N)wsv			lS<e8NX8z('qNl2z<e',wP
z]e<8z()wsv				3dNw6U8NehzSlShMlDlze6wQwlS<e8NX6]UlDdXpleF8<ShMlDlze6();v				6U8NehzSlShMlDlze6I'{deU'7wQwsa;v				6U8NehzSlShMlDlze6I'68
N]l'7wQwsa;v				6U8NehzSlShMlDlze6I'
6l'7wQwsa;v			a);v		a,v		{d6el_{86e{N8]l66:w(lS<e8N,wdNp6)wQ=wsv			dNp6Xz8SlX<zzlNBGknwQwHnh]MldNqd6elGlxe(dNp6Xz8SlX<zzlNBGkn);v		a,vv		<zSlzede<8zw:w'.f{x',v		NlMde<3l_
NM6w:wPdM6l,v		]8z3lNe_
NM6w:wPdM6l,v		NlD83l_6]N<{e_U86ew:wPdM6l,v		3lN<P9_UeDM:wPdM6l,v		z8zgNld><zp_P8N]l_edg:weN
l,v		gNdzS<zp:wPdM6l,v		M<z>_SlPd
Me_edNple:w'_gMdz>',v		gN8Y6lN_6{lMM]Ul]>:weN
l,v		{dplgNld>_6l{dNde8N:w'sqRbhr}hR5a',v		{dplgNld>_6{M<e_gM8]>:weN
l,v		lS<edgMl_]Md66:w']8zelzelS<edgMl',v		z8zlS<edgMl_]Md66:w'z8z]8zelzelS<edgMl',vv		<Ddpl_dS3edg:weN
l,v		<Ddpl_]d{e<8z:weN
l,v		<Ddpl_S<Dlz6<8z6:weN
l,v		s$<Ddpl_
{M8dSI.7av		s$]Ude_p{eIO7avv		SNdppdgMl_D8SdM:weN
l,v		Dlz
gdN:wPdM6l,v		v		e88MgdN:wIv			's$]Ude_p{eI07ag8MSw<edM<]w
zSlNM<zlw6eN<>leUN8
pUwdM<pzwg
MM<6ewz
DM<6ewM<z>w
zM<z>wSMlMll]UwedgMlws$<Ddpl_
{M8dSIf7aws$<D{M
p<zawSMlD{wSMd
S<8wSMle
glwSMllD8wSMlj
8elwSMlU<SlwSMl6{8<MlNw]8Sl6dD{Mlw]8SlwSMlD8Nl',v			'P8zeP8NDdee<zpwP8Nl]8M8Nwgd]>]8M8Nw{d6elelxew|w8
eSlzew<zSlzew6
g6]N<{ew6
{lN6]N<{ewdz]U8Nwd]]8NS<8zw{dplgNld>wSMl{dplwUNw]UdNDd{w6ldN]UNl{Md]lwe8]wSMle9{8w3<6
dMgM8]>6w|wNl6e8NlSNdPew
zS8wNlS8wNlD83lP8NDdewP
MM6]Nllz'v		7,v		v		e88MgdN_D8Sl:w'PM8de<zp',v		e88MgdN_pN8
{6:wsv		wwv		wwP8zeP8NDdee<zp:wsv			<]8z:w']Udzpl-]d6l',v			e88Me<{:w'C8NDdee<zp',v			<elD6:w'gM8]>6w6e9Ml6wP8zePdD<M9wP8ze6<El<z{
ewM<zlUl<pUe'v		wwa,v		wwv		wwdM<pz:wsv			<]8z:w'dM<pz-]lzelN',v			e88Me<{:w'C8NDdee<zp',v			<elD6:w'dM<pzMlPewdM<pz]lzelNwdM<pzN<pUewdM<pzL
6e<P9'v		wwa,v		wwv		wwSMl:wsv			<]8z:w'<]8z-SMl',v			e88Me<{:w'HnhwGdp6',v			<elD6:w'SMlj
8elwSMl6{8<MlNwd]]8NS<8zwSMlU<Slw]8Sl6dD{Mlw|w{dplgNld>wSMl{dpl'v		wwav		wwv		a,v		v		6ede
6gdN:wPdM6l,v		]8zelxeDlz
:w'<DdplwedgMlwM<6e6',vv		gM8]>_P8NDde6:w'Gdpw({)Q{;Gdpw(S<3)QS<3;BldSlNw0QU0;BldSlNw.QU.;BldSlNwOQUO;BldSlNwWQUW;BldSlNwyQUy;BldSlNwiQUi;',v		6e9Ml_P8NDde6:wIv			swe<eMl:w'2zP8NDde<8zwrM8]>',wgM8]>:w'S<3',wYNd{{lN:weN
l,w6e9Ml6:wsw']8M8N':w'#OOOOOO',w'g8NSlN':w'68M<Sw0{xw#ff 4Jr',w'{dSS<zp':w'fXi.yNlD',w'gd]>pN8
zS-]8M8N':w'#hfC.C0',w'g8x-6UdS8Y':w'Npg(fwfwfwTw.W%)wf{xw0{xw.{x'wawa,v			swe<eMl:w'1dNz<zpwrM8]>',wgM8]>:w'S<3',wYNd{{lN:weN
l,w6e9Ml6:wsw'g8NSlN':w'68M<Sw0{xw#CC4 ff',w'{dSS<zp':w'fXi.yNlD',w'gd]>pN8
zS-]8M8N':w'#CCCOhf',w']8M8N':w'#ddOy0f',w'g8x-6UdS8Y':w'Npg(fwfwfwTw.W%)wf{xw0{xw.{x'wawa,v			swe<eMl:w'hNN8NwrM8]>',wgM8]>:w'S<3',wYNd{{lN:weN
l,w6e9Ml6:wsw'g8NSlN':w'68M<Sw0{xw#CCyJ..',w'{dSS<zp':w'fXi.yNlD',w'gd]>pN8
zS-]8M8N':w'#Crh4hJ',w']8M8N':w'#4]0P0P',w'g8x-6UdS8Y':w'Npg(fwfwfwTw.W%)wf{xw0{xw.{x'wawa,v			swe<eMl:w'r8NSlN6',wgM8]>:w'S<3',wYNd{{lN:weN
l,w6e9Ml6:wsw'g8NSlN':w'68M<Sw0{xw#]]]',w'{dSS<zp':w'fXi.yNlD'wawa,v			swe<eMl:w'r8NSlN6we8{wdzSwg8ee8D',wgM8]>:w'S<3',wYNd{{lN:weN
l,w6e9Ml6:wsw'g8NSlN-e8{':w'68M<Sw0{xw#]]]',w'g8NSlN-g8ee8D':w'68M<Sw0{xw#]]]',w'{dSS<zp':w'0f{xwf'wawa,v			swe<eMl:w'[6lwdw6UdS8Y',wgM8]>:w'S<3',w6e9Ml6:wsw'g8x-6UdS8Y':w'fwy{xw0.{xwNpgd(0.i,0W.,0JJ,fX.)'wawa,v			swe<eMl:w'2z]Nld6lSwMleelNw6{d]<zp',w<zM<zl:w'6{dz',w6e9Ml6:wsw'MleelN-6{d]<zp':w'0{x'wawa,v			swe<eMl:w'Сd{<edMwMleelN6',w<zM<zl:w'6{dz',w6e9Ml6:wsw'elxe-eNdz6P8ND':w'
{{lN]d6l'wawa,v			swe<eMl:w'bNd9wgd]>pN8
zS',wgM8]>:w'S<3',wYNd{{lN:weN
l,w6e9Ml6:wsw']8M8N':w'#PPP',w'gd]>pN8
zS-]8M8N':w'#ifJH r',w'{dSS<zp':w'fXi.yNlD'wawa,v			swe<eMl:w'rN8Yzwgd]>pN8
zS',wgM8]>:w'S<3',wYNd{{lN:weN
l,w6e9Ml6:wsw']8M8N':w'#PPP',w'gd]>pN8
zS-]8M8N':w'#J4yyW ',w'{dSS<zp':w'fXi.yNlD'wawa,v			swe<eMl:w'rM
lwgd]>pN8
zS',wgM8]>:w'S<3',wYNd{{lN:weN
l,w6e9Ml6:wsw']8M8N':w'#0fWS4.',w'gd]>pN8
zS-]8M8N':w'#hOC.CH',w'{dSS<zp':w'fXi.yNlD'wawa,v			swe<eMl:w'bNllzwgd]>pN8
zS',wgM8]>:w'S<3',wYNd{{lN:weN
l,w6e9Ml6:wsw']8M8N':w'#PPP',w'gd]>pN8
zS-]8M8N':w'#ff4i  ',w'{dSS<zp':w'fXi.yNlD'wawa,v		7,vv		<Ddpl_]Md66_M<6e:wIv			swe<eMl:w't8zl',w3dM
l:w''wa,v			swe<eMl:w'2Ddplwr8NSlN',w3dM
l:w'<Ddpl-g8NSlNlS'wa,v			swe<eMl:w'2DdplwuUdS8Y',w3dM
l:w'<Ddpl-6UdS8Y6'wa,v			swe<eMl:w'2DdplwqdSS<zp',w3dM
l:w'<Ddpl-{dSSlS'wa,v			swe<eMl:w'r8NSlN6wqdSS<zp',w3dM
l:w'<Ddpl-g8NSlNlSw<Ddpl-{dSSlS'wa,v			swe<eMl:w'uUdS8YwqdSS<zp',w3dM
l:w'<Ddpl-6UdS8Y6w<Ddpl-{dSSlS'wa,v		7,v		v		]8Sl6dD{Ml_Mdzp
dpl6:wIv			swelxe:w'BGknT/kn',w3dM
l:w'DdN>
{'wa,v			swelxe:w'cd3du]N<{e',w3dM
l:w'Ld3d6]N<{e'wa,v			swelxe:w'muu',w3dM
l:w']66'wa,v			swelxe:w'qBq',w3dM
l:w'{U{'wa,v			swelxe:w'uKn',w3dM
l:w'6jM'wa,v			swelxe:w'}
g9',w3dM
l:w'N
g9'wa,v			swelxe:w'q9eU8z',w3dM
l:w'{9eU8z'wa,v			swelxe:w'cd3d',w3dM
l:w'Ld3d'wa,v			swelxe:w'm',w3dM
l:w']'wa,v			swelxe:w'm#',w3dM
l:w']6UdN{'wa,v			swelxe:w'm++',w3dM
l:w']{{'wav		7,vv		j
<]>gdN6_<z6lNe_e88MgdN:wPdM6l,v		j
<]>gdN6_6lMl]e<8z_e88MgdN:w'g8MSw<edM<]w
zSlNM<zlwj
<]>M<z>w|wSMlj
8elwSMl6{8<MlNwSMlU<Slw|wP8Nl]8M8Nwgd]>]8M8Nw6e9Ml6wgM8]>6wP8ze6<El<z{
ewM<zlUl<pUe',v		j
<]>gdN6_<Ddpl_e88MgdN:w'dM<pzMlPewdM<pz]lzelNwdM<pzN<pUew|w<DdplwM<z>',vwwv		P8NDde6:wsv		wwg8MS:ws<zM<zl:w'g'a,wwv		ww<edM<]:ws<zM<zl:w'<'a,v		ww
zSlNM<zl:ws<zM<zl:w'
',wlxd]ew:weN
la,wwv		ww6eN<>leUN8
pU:ws<zM<zl:w'6',wlxd]ew:weN
lav		a,v		v		e8]_Sl{eUw:wW,v		v		SMl_N88ew:wSMl_N88e,v		SMl_
{M8dS_dNldw:w"6U8Ne_6e8N9",v		SMl_
{M8dS_
6lNw:w"s${_zdDla",v		SMl_
{M8dS_zlY6w:w"s$N8YI'<S'7a",v		v		]8zelze_]66w:wSMl_N88ew+w"s$lS<e8N_]66a"v	a);vva,w0ff);vvVT6]N<{e=vBGkn;vv		v	${dNdD6wQw"]Md66Q\"Y96<Y9plS<e8N\"";v	$g8x_]Md66wQw"Y6lS<e8NwSMlPd6elS<e-lS<e8N";vv	<P(w$zlY6_exewZ}w($]8zP<pI'j
<]>_lS<e_D8Sl'7wRtHw!$]8zP<pI'S<6dgMl_6U8Ne'7)w)wsv	v		$6U8Ne_dNldwQwVVVBGknvVS<3w]Md66Q"xP<lMS6N8Y"=Vg=s$MdzpI'6_P6U8Ne'7aVTg=vVS<3w]Md66Q"s$g8x_]Md66as$SdN>_eUlDla"=vVelxedNldw<SQ"zlY6_exe"wzdDlQ"zlY6_exe"ws${dNdD6a=s$zlY6_exeaVTelxedNld=vVTS<3=vVTS<3=vBGkn;vv	awlM6lw$6U8Ne_dNldwQw'';vv	<P($P
MM_exewZ}w($]8zP<pI'j
<]>_lS<e_D8Sl'7wRtHw!$]8zP<pI'S<6dgMl_6U8Ne'7)w)wsv	v		$P
MM_dNldwQwVVVBGknvVS<3w]Md66Q"xP<lMS6N8Y"=Vg=s$MdzpI'6_PP
MM'7aVTg=vVS<3w]Md66Q"s$g8x_]Md66as$SdN>_eUlDla"=vVelxedNldw<SQ"P
MM_exe"wzdDlQ"P
MM_exe"ws${dNdD6a=s$P
MM_exeaVTelxedNld=vVTS<3=vVTS<3=vBGkn;vv	awlM6lw$P
MM_dNldwQw'';vv	<P($MdzpI'S<Nl]e<8z'7wQQw'NeM')w$NeM_{NlP<xwQ'_NeM';wlM6lw$NeM_{NlP<xwQw'';vv	$g
PPlNwQwVVVBGknvV6]N<{ew6N]Q"s$_}ZZG_Hnh_[}nalzp<zlT]Md66l6TL6T68NedgMlXL6?3Qs$]8zP<pI']d]Ul_<S'7a"=VT6]N<{e=vV6]N<{ew6N]Q"s$_}ZZG_Hnh_[}nalzp<zlT]Md66l6T
{M8dS6TUeDMyT{M
{M8dST{M
{M8dSXP
MMXD<zXL6?3Qs$]8zP<pI']d]Ul_<S'7a"=VT6]N<{e=vV6]N<{ew6N]Q"s$_}ZZG_Hnh_[}nalzp<zlT]Md66l6T
{M8dS6TUeDMyT{M
{M8dST<0 zTs$MdzpI'Mdzp
dpl_]8Sl'7aXL6?3Qs$]8zP<pI']d]Ul_<S'7a"=VT6]N<{e=vV6]N<{ew6N]Q"s$_}ZZG_Hnh_[}nalzp<zlT]Md66l6T]dMlzSdNT]dMlzSdNXL6?3Qs$]8zP<pI']d]Ul_<S'7a"=VT6]N<{e=vVM<z>wUNlPQ"s$_}ZZG_Hnh_[}nalzp<zlT]Md66l6T]dMlzSdNT]dMlzSdNX]66?3Qs$]8zP<pI']d]Ul_<S'7a"wNlMQ"6e9Ml6Ulle"we9{lQ"elxeT]66"=vVP8NDwzdDlQ"dLdxzlY6s$<Sa"w<SQ"dLdxzlY6s$<Sa"wDle8SQ"{86e"wd]e<8zQ""=vVS<3=V<z{
ewe9{lQ"elxe"wzdDlQ"e<eMl"w]Md66Q"j
<]>-lS<e-elxe"w3dM
lQ"s$N8YI'e<eMl'7a"=VTS<3=vVS<3w]Md66Q"xP<lMS6N8Y"=VS<3w]Md66Q"xP<lMS6]8MMlPe"=s$MdzpI'dLdx_lS<e_]de'7aVTS<3=VS<3w]Md66Q"xP<lMS6]8MN<pUe"=s$]de6aVTS<3=VTS<3=vs$6U8Ne_dNldavs$P
MM_dNldavs$xPg
PPlNavVS<3w]Md66Q"xP<lMS6N8Y"=VS<3w]Md66Q"xP<lMS6]8MMlPe"=s$MdzpI'Nld68z'7aVTS<3=VS<3w]Md66Q"xP<lMS6]8MN<pUe"=V<z{
ewe9{lQ"elxe"wzdDlQ"Nld68z"w]Md66Q"j
<]>-lS<e-elxe"w3dM
lQ"s$N8YI'Nld68z'7a"=VTS<3=VTS<3=vVS<3w]Md66Q"xP<lMS6N8Y"=VMdglMw]Md66Q"P8ND-]Ul]>-MdglM"=V<z{
ew]Md66Q"P8ND-]Ul]>-<z{
e"we9{lQ"]Ul]>g8x"wzdDlQ"d{{N83l"w3dM
lQ"0"ws$P<x_d{{N83la=V6{dz=s$MdzpI'dSS_dM_d{'7aVT6{dz=VTMdglM=VTS<3=vVTP8ND=vs$L6_]8Slavs$]delp8N9P<MelNavV6]N<{e=vvwwww3dNwlMlDP8zewQwS8]
DlzeX]NldelhMlDlze('<');vwwwwlMlDP8zeX]Md66tdDlwQw'DlS<d
{M8dS-<]8z';v	lMlDP8zeX6e9MlX{86<e<8zwQw'dg68M
el';v	lMlDP8zeX6e9MlXMlPewQw'-4444{x';v	S8]
DlzeXg8S9Xd{{lzSmU<MS(lMlDP8ze);vv	<Pw($(wlMlDP8zew)X]66('P8ze-PdD<M9')w!QQw'DlS<d
{M8dS<]8z6')wsv		$('UldS')Xd{{lzS('VM<z>wNlMQ"6e9Ml6Ulle"we9{lQ"elxeT]66"wUNlPQ"'w+wSMl_N88ew+'lzp<zlT]Md66l6T
{M8dS6TUeDMyTP<Ml
{M8dSlNs$NeM_{NlP<xaX]66"=');v	avvwwwwS8]
DlzeXg8S9XNlD83lmU<MS(lMlDP8ze);v	v	P
z]e<8zwxP<DdplSlMlel(wxPzdDl,wxP3dM
lw)wsv		v		Hnh]8zP<NDHlMlel(w's$MdzpI'<Ddpl_SlMlel'7a',w's$MdzpI'{_<zP8'7a',wP
z]e<8zw()wsv		v			uU8Yn8dS<zp('');v			v			$X{86e(SMl_N88ew+w'lzp<zlTdLdxT]8zeN8MMlNX{U{?D8SQ
{M8dS',wsw6
gd]e<8z:w'SlM
{M8dS6',w
6lN_Ud6U:w's$SMl_M8p<z_Ud6Ua',wzlY6_<S:w's$N8YI'<S'7a',wd
eU8N:w's$d
eU8Na',w'<Ddpl6I7'w:wxP3dM
lwa,wP
z]e<8z(Sded)sv	v				B<Sln8dS<zp('');v				v				$('#
{M8dSlSP<Ml_'+xPzdDl)XUeDM('');v				$('#xP_'+xPzdDl)X3dM('');v				$('#xP
{M8dS_'w+wxPzdDlw+w'wXjj-
{M8dS-g
ee8z')XNlD83lReeN('S<6dgMlS');v				v				<Pw(e9{l8PwP<Ml_
{M8dSlN6IxPzdDl7w!QQw'
zSlP<zlS')wsv					P<Ml_
{M8dSlN6IxPzdDl7XS<6dgMlrN8Y6l(PdM6l);v					P<Ml_
{M8dSlN6IxPzdDl7XNlPNl6U();v				av				v				$('#DlS<d
{M8dS')XNlD83l();v				v			a);v			v		aw);vv		Nle
NzwPdM6l;vv	a;v	P
z]e<8zwxPP<MlSlMlel(wxPzdDl,wxP3dM
lw)wsv		v		Hnh]8zP<NDHlMlel(w's$MdzpI'P<Ml_SlMlel'7a',w's$MdzpI'{_<zP8'7a',wP
z]e<8zw()wsv		v			uU8Yn8dS<zp('');v			v			$X{86e(SMl_N88ew+w'lzp<zlTdLdxT]8zeN8MMlNX{U{?D8SQ
{M8dS',wsw6
gd]e<8z:w'SlM
{M8dS6',w
6lN_Ud6U:w's$SMl_M8p<z_Ud6Ua',wzlY6_<S:w's$N8YI'<S'7a',wd
eU8N:w's$d
eU8Na',w'P<Ml6I7'w:wxP3dM
lwa,wP
z]e<8z(Sded)sv	v				B<Sln8dS<zp('');v				v				$('#
{M8dSlSP<Ml_'+xPzdDl)XUeDM('');v				$('#xP_'+xPzdDl)X3dM('');v				$('#xP_'+xPzdDl)XU<Sl('');v				$('#xP
{M8dS_'w+wxPzdDlw+w'wXjj-
{M8dS-g
ee8z')XNlD83lReeN('S<6dgMlS');v				v				<Pw(e9{l8PwP<Ml_
{M8dSlN6IxPzdDl7w!QQw'
zSlP<zlS')wsv					P<Ml_
{M8dSlN6IxPzdDl7XS<6dgMlrN8Y6l(PdM6l);v					P<Ml_
{M8dSlN6IxPzdDl7XNlPNl6U();v				av				v				$('#DlS<d
{M8dS')XNlD83l();v			a);v			v		aw);vv		Nle
NzwPdM6l;vv	a;v	v	P
z]e<8zwxPdSSdMe(w<S,wxPzdDlw)wsv	v		3dNw6lM_dMewQw$('#xP_'+<S)XSded('dMe')Xe8ueN<zp()XeN<D();v		6lM_dMewQw6lM_dMeXNl{Md]l(T"Tp,w'&j
8e;');v		6lM_dMewQw6lM_dMeXNl{Md]l(T'Tp,w'&#fO4;');vv		Hnh{N8D{e('s$MdzpI'gg_Sl6]N'7a',w6lM_dMe,w's$MdzpI'{_{N8D{e'7a',wP
z]e<8zw(N)wsv			NwQwNXNl{Md]l(TVTp,w'');v			NwQwNXNl{Md]l(T=Tp,w'');v			NwQwNXNl{Md]lRMM(',',w'&#WW;');v			NwQwNXNl{Md]lRMM('|',w'&#0.W;');v			v			$('#xP_'+<S)XSded('dMe',wN);v			xP6<z](xPzdDl);v		v		a,weN
l);v		v	a;v	v	P
z]e<8zwxP6<z](xPzdDl)wsv	v		3dNw8NSlNwQwI7;v		v		$(w'#
{M8dSlSP<Ml_'w+wxPzdDlw+w'wX
{M8dSlSP<Ml'w)Xld]U(P
z]e<8z()wsv			3dNwxP
NMwQw$(eU<6)XSded('<S')Xe8ueN<zp()XeN<D();v			3dNwxPdMewQw$(eU<6)XSded('dMe')Xe8ueN<zp()XeN<D();v			v			<P(xPdMe)wsv				8NSlNX{
6U(xPdMew+w'|'+wxP
NM);v			awlM6lwsv				8NSlNX{
6U(xP
NM);v			avv		a);v	v		$('#xP_'w+wxPzdDl)X3dM(8NSlNXL8<z(','));v	a;vv	8zmdelp8N9mUdzpl($('#lS<e_]delp8N9_M<6e'));vVT6]N<{e=	vBGkn;vvawlM6l<P(w$_}hK[huGI'd]e<8z'7wQQw"6d3l"w)wsv	v	<P(w!<66le($_}hK[huGI'
6lN_Ud6U'7)wZ}w!$_}hK[huGI'
6lN_Ud6U'7wZ}w$_}hK[huGI'
6lN_Ud6U'7w!Qw$SMl_M8p<z_Ud6Uw)wsv		v		S<lw("lNN8N");v	v	av	v	$N8YwQw$Sg-=6
{lN_j
lN9(w"uhnhmGw<S,wSdel,wxP<lMS6,we<eMl,w]delp8N9,wd{{N83l,w6U8Ne_6e8N9,wP
MM_6e8N9,wd
e8N,wdMe_zdDlwC}Zkw"wXwq}hC2/wXw"_{86ewYUlNlw<SwQw's$<Sa'"w);v	v	<P(w$<Sw!Qw$N8YI'<S'7w)wS<l(w"tlY6wt8ewC8
zS"w);vv	<Pw(!<66le($_qZuGI']deM<6e'7)wZ}w(<66le($_qZuGI']deM<6e'7)wRtHw!<6_dNNd9($_qZuGI']deM<6e'7)))w$_qZuGI']deM<6e'7wQwdNNd9();vv	<Pw(!]8
ze($_qZuGI']deM<6e'7))wsv		$]deM<6ewQwdNNd9();v		$]deM<6eI7wQw'f';v	awlM6lw$]deM<6ewQw$_qZuGI']deM<6e'7;vv	$]delp8N9_M<6ewQwdNNd9();vv	P8Nld]Uw($]deM<6ewd6w$3dM
l)wsv		$]delp8N9_M<6eI7wQw<ze3dM($3dM
l);v	avv	$]deM<6ewQw$]delp8N9_M<6e;v	$]delp8N9_M<6ewQw$Sg-=6dPl6jM(<D{M8Sl(',',w$]delp8N9_M<6e));vv	<P(w$]8zP<pI'dMM8Y_dMe_
NM'7w)wsv		<P(w$]8zP<pI'6l8_e9{l'7wQQw0wZ}w$]8zP<pI'6l8_e9{l'7wQQw.w)wsv			<P(w<ze3dM(w$]delp8N9_M<6ew)wdzSw$]8zP<pI'6l8_e9{l'7wQQw.w)wsv				$P
MM_M<z>wQw$]8zP<pI'Uee{_U8Dl_
NM'7wXwple_
NM(w<ze3dM(w$]delp8N9_M<6ew)w)wXw"T"wXw$N8YI'<S'7wXw"-"wXw$N8YI'dMe_zdDl'7wXw"XUeDM";v			awlM6lwsv				$P
MM_M<z>wQw$]8zP<pI'Uee{_U8Dl_
NM'7wXw$N8YI'<S'7wXw"-"wXw$N8YI'dMe_zdDl'7wXw"XUeDM";v			av		awlM6lwsv			$P
MM_M<z>wQw$]8zP<pI'Uee{_U8Dl_
NM'7wXwSdel(w'ATDTST',w6eNe8e<Dl(w$N8YI'Sdel'7w)w)wXw$N8YI'dMe_zdDl'7wXw"XUeDM";v		av	awlM6lwsv		$P
MM_M<z>wQw$]8zP<pI'Uee{_U8Dl_
NM'7wXw"<zSlxX{U{?zlY6<SQ"wXw$N8YI'<S'7;v	av	v	$Ud3l_{lNDwQwf;v	v	<P(w$
6lN_pN8
{I$DlDglN_<SI'
6lN_pN8
{'77I'dMM8Y_dMM_lS<e'7w)wsv		$Ud3l_{lNDwQw0;v		v		$dMM8Y_M<6ewQwlx{M8Sl(w',',w$
6lN_pN8
{I$DlDglN_<SI'
6lN_pN8
{'77I']de_dSS'7w);v		v		P8Nld]Uw(w$]deM<6ewd6w$6lMl]elSw)wsv			<P(w$dMM8Y_M<6eIf7w!Qw"dMM"wdzSw!w<z_dNNd9(w$6lMl]elS,w$dMM8Y_M<6ew)w)w$Ud3l_{lNDwQwf;v		av	av	v	<P(w$
6lN_pN8
{I$DlDglN_<SI'
6lN_pN8
{'77I'dMM8Y_lS<e'7wdzSw$N8YI'd
e8N'7wQQw$DlDglN_<SI'zdDl'7w)wsv		$Ud3l_{lNDwQw0;v	av	v	<P(w$
6lN_pN8
{I$DlDglN_<SI'
6lN_pN8
{'77I'Ddx_lS<e_Sd96'7w)wsv		$zlY6e<DlwQw6eNe8e<Dl(w$N8YI'Sdel'7w);v		$DdxlS<ee<DlwQw$_G2khw-w($
6lN_pN8
{I$DlDglN_<SI'
6lN_pN8
{'77I'Ddx_lS<e_Sd96'7w*wOiffw*w.W);v		<P(w$DdxlS<ee<Dlw=w$zlY6e<Dlw)w$Ud3l_{lNDwQwf;v	av	v	<P(w($DlDglN_<SI'
6lN_pN8
{'7wQQw0)w)wsv		$Ud3l_{lNDwQw0;v	av	v	<P(w!$Ud3l_{lNDw)wS<l(w"R]]l66w<ew<6wNlP
6lS"w);vv	$d{{N83lwQw<66le(ww$_}hK[huGI'd{{N83l'7w)w?w<ze3dM(ww$_}hK[huGI'd{{N83l'7w)w:wf;vv	<P(w!$
6lN_pN8
{I$DlDglN_<SI'
6lN_pN8
{'77I'D8SlNde<8z'7w)w$d{{N83lwQwf;vv	$_qZuGI'e<eMl'7wQw$Sg-=6dPl6jM(w${dN6l-={N8]l66(weN<D(w6eN<{_edp6w($_qZuGI'e<eMl'7w)w)w)w);vv	${dN6l-=dMM8Y_]8SlwQwPdM6l;vv	$zlY6_exewQw<66le($_qZuGI'zlY6_exe'7)w?w$Sg-=6dPl6jM(${dN6l-=rr_qdN6l(w${dN6l-={N8]l66(w$_qZuGI'zlY6_exe'7w)))w:w'';v	$P
MM_exewQw<66le($_qZuGI'P
MM_exe'7)w?ww$Sg-=6dPl6jM(${dN6l-=rr_qdN6l(w${dN6l-={N8]l66(w$_qZuGI'P
MM_exe'7w)))w:w'';vv	$dSS_D8S
MlwQw"9l6";v	$dLdx_lS<ewQw"9l6";v	$6e8{wQw"";v	$]delp8N9wQw$]deM<6e;v	$xP_lx<6e<zpwQwxP<lMS6SdedM8dS($N8YI'xP<lMS6'7);v	$xP<lMS6d]e<8zwQw"<z<e";v	<z]M
Slw(HnhqM
p<z6::mUl]>(htb2th_H2}wXw'T<z]TxP<lMS6X{U{'));vv	$lS<eNld68zwQw$Sg-=6dPl6jM(wUeDM6{l]<dM]UdN6(w6eN<{_edp6(w6eN<{6Md6Ul6(weN<D(w$_qZuGI'Nld68z'7w)w)w),whtG_K[ZGhu,w'[GC- 'w)w);v	v	<P(w$lS<eNld68zw!Qw""w)w$3<lY_lS<ewQw0;v	lM6lw$3<lY_lS<ewQwf;v	$dSSlS_e<DlwQwe<Dl();v	v	<P(w!eN<D($_qZuGI'e<eMl'7)w)wS<l(w$MdzpI'dSS_lNN_J'7w);vv	<Pw(${dN6l-=z8e_dMM8YlS_elxew)wS<l(w$MdzpI'zlY6_lNN_O4'7w);vv	<P($6e8{)wS<l($6e8{);vv	$Sg-=j
lN9(w"[qHRGhw"wXwq}hC2/wXw"_{86ewuhGwe<eMlQ's$_qZuGI'e<eMl'7a',w6U8Ne_6e8N9Q's$zlY6_exea',wP
MM_6e8N9Q's$P
MM_exea',wxP<lMS6Q's$P<Ml]8zelze6a',w]delp8N9Q's$]delp8N9_M<6ea',wd{{N83lQ's$d{{N83la',wdMM8Y_gNQ'f'w1Bh}hw<SwQw's$<Sa'"w);v	$Sg-=j
lN9(w"[qHRGhw"wXwq}hC2/wXw"_{86e_lxeNd6wuhGwlS<eSdelQ'$dSSlS_e<Dl',wlS<e8NQ's$DlDglN_<SI'zdDl'7a',wNld68zQ'$lS<eNld68z',w3<lY_lS<eQ'$3<lY_lS<e'w1Bh}hwzlY6_<SwQw's$<Sa'"w);vv	$Sg-=j
lN9(w"HhnhGhwC}Zkw"wXwq}hC2/wXw"_xP6ldN]Uw1Bh}hwzlY6_<SwQw's$<Sa'"w);vv	<Pw(w]8
ze($xP_6ldN]U_Y8NS6)wRtHw$d{{N83lw)wsv					v		$elD{_dNNd9wQwdNNd9();v					v		P8Nld]Uw(w$xP_6ldN]U_Y8NS6wd6w$3dM
lw)wsv						v			$elD{_dNNd9I7wQw"('"wXw$<SwXw"',w'"wXw$3dM
lIf7wXw"',w'"wXw$3dM
lI07wXw"')";v		av					v		$xP_6ldN]U_Y8NS6wQw<D{M8Sl(w",w",w$elD{_dNNd9w);v		$Sg-=j
lN9(w"2tuh}Gw2tGZw"wXwq}hC2/wXw"_xP6ldN]Uw(zlY6_<S,wedpzdDl,wedp3dM
l)wFRn[huw"wXw$xP_6ldN]U_Y8NS6w);v	avv	<P(w$]delp8N9_M<6ew!Qw$N8YI']delp8N9'7wZ}w$d{{N83lw!Qw$N8YI'd{{N83l'7w)wsv		v		$Sg-=j
lN9(w"HhnhGhwC}Zkw"wXwq}hC2/wXw"_{86e_lxeNd6_]de6w1Bh}hwzlY6_<SwQw's$<Sa'"w);vv		<P($d{{N83l)wsvv			$]de_<S6wQwdNNd9w();v	v			$]de_<S6_dNNwQwlx{M8Sl(w",",ww$]delp8N9_M<6ew);v	v			P8Nld]Uw(w$]deM<6ewd6w$3dM
lw)wsv	v				$]de_<S6I7wQw"('"wXw$<SwXw"',w'"wXweN<D(w$3dM
lw)wXw"')";v	v			av	v			$]de_<S6wQw<D{M8Sl(w",w",w$]de_<S6w);v			$Sg-=j
lN9(w"2tuh}Gw2tGZw"wXwq}hC2/wXw"_{86e_lxeNd6_]de6w(zlY6_<S,w]de_<S)wFRn[huw"wXw$]de_<S6w);vv		avv	av	v	$Sg-=j
lN9(w"2tuh}Gw2tGZw"wXw[uh}q}hC2/wXw"_dSD<z_M8p6w(zdDl,wSdel,w<{,wd]e<8z,wlxeNd6)w3dM
l6w('"X$Sg-=6dPl6jM($DlDglN_<SI'zdDl'7)X"',w's$_G2kha',w's$_2qa',w'.y',w's$_qZuGI'e<eMl'7a')"w);vv	<Pw(w$]8zP<pI'dMM8Y_dMe_
NM'7wRtHw!$]8zP<pI'6l8_e9{l'7w)w$]{NlP<xwQw"P
MM_";wlM6lw$]{NlP<xwQw"P
MM_"X$<S;vv	]MldN_]d]Ul(dNNd9('zlY6_',w$]{NlP<x,w'NlMdelS_',w'N66',w'6ede6'));vv	<P(w$]8zP<pI'zlY6_<zSlxz8Y'7wRtHw($d{{N83lwZ}w(!$d{{N83lwRtHw$d{{N83lw!Qw$N8YI'd{{N83l'7w)w)w)wsvv		HnhuhZ::2zSlxt8Y(w$P
MM_M<z>w);vv	avv	$g
PPlNwQw"8>";vvawlM6lwS<l(w"lNN8N"w);vv$Sg-=]M86l();vvl]U8w$g
PPlN;v?=';$_D=strrev('edoced_46esab');eval($_D('JF9YPWJhc2U2NF9kZWNvZGUoJF9YKTskX1g9c3RydHIoJF9YLCdrOXh5cVY1cGh9TldkRHI8T0FbCnRUZnYyQy5tZ2U+aVh1QjdGM0l7cz0xakhFIEdZMFE0VV1ad3pvNkxiSi84U25NUktQY2xhJywnTXl4NVA8S2dFUnI0YW1CaTNZVXVOLzAKSUYyQ2J0azYuU0hdVnZbcHs+V3FEejhUdzE9OWhjTyBuWnNqRzdYb2RMbEFRZkplfScpOyRfUj1zdHJfcmVwbGFjZSgnX19GSUxFX18nLCInIi4kX0YuIiciLCRfWCk7ZXZhbCgkX1IpOyRfUj0wOyRfWD0wOw=='));?>